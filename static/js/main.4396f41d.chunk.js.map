{"version":3,"sources":["SiteMenu.tsx","ContactSidebar.tsx","common/textBodies/Section.tsx","common/textBodies/SectionHeader.tsx","common/textBodies/StyledText.tsx","common/buttons/Buttons.tsx","common/constants/Colors.tsx","common/constants/Ratings.tsx","common/constants/Strings.tsx","sections/AboutSection.tsx","sections/ContactSection.tsx","sections/ExperienceSection.tsx","sections/ProjectSection.tsx","sections/SkillsSection.tsx","sections/WelcomeSection.tsx","App.tsx","index.tsx","NotFoundPage.tsx"],"names":["SiteMenu","props","mode","onClick","onSectionClick","selectable","style","fontFamily","Item","key","icon","HomeOutlined","links","reverse","map","title","link","float","CenteredVerticalLine","styled","div","ContactSider","Layout","Sider","ContactButton","Button","ContactSidebar","width","contacts","href","size","shape","target","type","Section","forwardRef","ref","margin","marginTop","children","SectionHeader","display","justifyContent","orientation","num","Text","color","colors","highlight","fontSize","marginRight","primary","StyledParagraph","Paragraph","secondary","StyledText","StyledTitle","Title","ClearTextButton","borderRadius","borderWidth","blue","grey","ratings","welcome","greeting","name","statement","summary","about","header","paragraphs","recentSkills","skills","experience","jobs","company","companyLink","location","start","end","points","ratingInfo","projects","underConstruction","subheader","list","MailOutlined","MobileOutlined","LinkedinFilled","GithubOutlined","AboutBody","paragraph","Math","random","toString","substring","AboutSection","paddingTop","span","skill","status","text","marginLeft","columns","dataIndex","align","ContactSection","dataSource","onRow","record","_","window","open","pagination","showHeader","StyledJob","job","rel","renderItem","point","borderBottomWidth","Meta","avatar","description","marginBottom","ExperienceSection","tabPosition","TabPane","tab","ProjectSection","image","Empty","PRESENTED_IMAGE_SIMPLE","SkillsSection","Object","entries","skillGroup","groupRatings","rating","flexDirection","disabled","defaultValue","WelcomeSection","App","sectionList","push","sectionRefMap","reduce","accumulator","val","createRef","Header","padding","position","zIndex","obj","current","scrollIntoView","behavior","Content","alignItems","ReactDOM","render","StrictMode","basename","exact","path","component","textAlign","WarningOutlined","document","getElementById"],"mappings":"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","file":"static/js/main.4396f41d.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport { Menu } from \"antd\";\nimport { HomeOutlined } from \"@ant-design/icons\";\n\ntype SiteMenuProps = {\n  links: {title: string, link: string}[],\n  onSectionClick: (_: { item?: any, key: any, keyPath?: any, domEvent?: any }) => void,\n};\n\nexport const SiteMenu: FC<SiteMenuProps> = (props) => {\n  return (\n    <Menu\n      mode=\"horizontal\"\n      onClick={props.onSectionClick}\n      selectable={false}\n      style={{fontFamily: \"'Roboto'\"}}\n    >\n      <Menu.Item key=\"#welcome\" icon={ <HomeOutlined /> } >\n        Jeremy Swerdlow | Software Engineer\n      </Menu.Item>\n      {\n        props.links.reverse().map(({title, link}) => {\n          return (\n            <Menu.Item key={link} style={{float: 'right'}} >\n              {title}\n            </Menu.Item>\n          )\n        })\n      }\n    </Menu>\n  );\n};","import React, { FC } from \"react\";\nimport { Layout, Button } from \"antd\";\nimport styled from \"styled-components\";\n\nconst CenteredVerticalLine = styled.div`\n  width: 1px;\n  background-color: #177ddc;\n  height: 100px;\n  display: block;\n  margin: 10px auto auto auto;\n`;\n\nconst ContactSider = styled(Layout.Sider)`\n  background: transparent;\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  min-height: 100%;\n`;\n\nconst ContactButton = styled(Button)`\n  border-width: 0px;\n  display: block;\n  margin: auto;\n`;\n\ntype ContactSidebarProps = {\n  contacts: {title: string, icon: JSX.Element, link: string, text: string}[]\n}\n\nexport const ContactSidebar: FC<ContactSidebarProps> = (props) => {\n  return (\n    <ContactSider width={50} >\n      {props.contacts.map(({title, icon, link}) => {\n        return (\n          <ContactButton\n            key={`${title}-side`}\n            href={link}\n            icon={icon}\n            size=\"large\"\n            shape=\"circle\"\n            target=\"_blank\"\n            type=\"link\"\n          />\n        );\n      })}\n      <CenteredVerticalLine />\n    </ContactSider>\n  );\n};","import React, { forwardRef, Ref } from \"react\";\n\ntype SectionProps = {\n  style?: {},\n  children?: any,\n};\n\nexport const Section = forwardRef((props: SectionProps, ref: Ref<HTMLDivElement>) => {\n  return (\n    <div\n      ref={ref}\n      style={{\n        width: \"80%\",\n        margin: \"auto\",\n        marginTop: \"150px\",\n        ...props.style}}\n      >\n      {props.children}\n    </div>\n  );\n});","import React, { FC } from \"react\";\nimport { Typography, Divider } from \"antd\";\nimport { colors } from \"..\";\n\ntype SectionHeaderProps = {\n  title: string,\n  num?: string,\n  orientation?: \"left\" | \"center\" | \"right\",\n}\n\nexport const SectionHeader: FC<SectionHeaderProps> = (props) => {\n  return (\n    <Divider style={{display: \"flex\", justifyContent: \"space-between\"}} orientation={props.orientation || \"left\"}>\n      {\n        props.num && <Typography.Text\n          style={{color: colors.highlight, fontFamily: \"'Roboto Mono'\", fontSize: \"20px\", marginRight: \"20px\"}}\n        >\n          {props.num}\n        </Typography.Text>\n      }\n      <Typography.Text\n        style={{color: colors.primary, fontFamily: \"'Roboto'\", fontSize: \"20px\"}}\n      >\n        {props.title}\n      </Typography.Text>\n    </Divider>\n  );\n}","import React, { FC } from \"react\";\nimport { Typography } from \"antd\";\nimport { colors } from \"..\";\n\ntype StyledParagraphProps = {\n  style?: {}\n};\n\nexport const StyledParagraph: FC<StyledParagraphProps> = (props) => {\n  return (\n    <Typography.Paragraph\n      style={{fontFamily: \"'Roboto'\", fontSize: \"16px\", color: colors.secondary, ...props.style}}\n    >\n      {props.children}\n    </Typography.Paragraph>\n  );\n}\n\ntype StyledTextProps = {\n  style?: {}\n};\n\nexport const StyledText: FC<StyledTextProps> = (props) => {\n  return (\n    <Typography.Text\n      style={{fontFamily: \"'Roboto'\", fontSize: \"14px\", color: colors.secondary, ...props.style}}\n    >\n      {props.children}\n    </Typography.Text>\n  )\n}\n\ntype StyledTitleProps = {\n  style?: {}\n};\n\nexport const StyledTitle: FC<StyledTitleProps> = (props) => {\n  return (\n    <Typography.Title\n      style={{fontFamily: \"'Roboto'\", fontSize: \"64px\", color: colors.primary, ...props.style}}\n    >\n      {props.children}\n    </Typography.Title>\n  )\n}","import React, { FC } from \"react\";\nimport { Button } from \"antd\";\nimport { StyledText } from \"../textBodies\";\n\ntype ButtonProps = {\n  href?: string,\n  onClick?: () => void,\n  style?: {},\n};\n\nexport const ClearTextButton: FC<ButtonProps> = (props) => {\n  return (\n    <Button\n      type=\"ghost\"\n      href={props.href}\n      onClick={props.onClick}\n      style={{\n        borderRadius: \"5px\",\n        borderWidth: \"1.5px\",\n        ...props.style\n      }}\n    >\n      <StyledText style={{color: \"inherit\"}}>\n        {props.children}\n      </StyledText>\n    </Button>\n  );\n};","import { blue, grey } from \"@ant-design/colors\";\n\nexport const colors = {\n  \"highlight\": blue.primary,\n  \"primary\": \"#FFFFFF\",\n  \"secondary\": grey[3],\n};","export const ratings = {\n  \"Programming Languages\": {\n    \"C\": 3,\n    \"C++\": 3,\n    \"Golang\": 4,\n    \"Groovy\": 4,\n    \"Haskell\": 3,\n    \"Java\": 5,\n    \"JavaScript\": 3,\n    \"Python\": 5,\n    \"Ruby\": 4,\n    \"Scala\": 2,\n    \"Shell\": 4,\n    \"TypeScript\": 4,\n  },\n  \"Frameworks\": {\n    \"Flask\": 5,\n    \"Pytest\": 5,\n    \"React\": 4,\n    \"Spring\": 3,\n  },\n  \"Tools\": {\n    \"Ansible\": 3,\n    \"Apache Kafka\": 4,\n    \"Chef\": 5,\n    \"Docker\": 5,\n    \"Docker-Compose\": 5,\n    \"Jenkins\": 5,\n    \"MySQL\": 4,\n    \"PostgreSQL\": 3,\n    \"Terraform\": 4,\n  },\n  \"Libraries\": {\n    \"Pandas\": 5,\n    \"Scikit-learn\": 4,\n  },\n  \"Concepts\": {\n    \"12 Factor App\": 3,\n    \"Agile Methodologies\": 5,\n    \"Configuration as code\": 3,\n    \"Containerization\": 4,\n    \"Microservice Architecture\": 4,\n    \"Serverless Architecture\": 4,\n  }\n};","import {\n  GithubOutlined,\n  LinkedinFilled,\n  MailOutlined,\n  MobileOutlined,\n} from \"@ant-design/icons\";\nimport React from \"react\";\n\nexport const links = [\n  {\n    title: \"About Me\",\n    link: \"#about\",\n  },\n  {\n    title: \"Experience\",\n    link: \"#jobs\",\n  },\n  {\n    title: \"Skills\",\n    link: \"#skills\",\n  },\n  {\n    title: \"Portfolio\",\n    link: \"#projects\",\n  },\n  {\n    title: \"Contact\",\n    link: \"#contact\",\n  },\n]\n\nexport const welcome = {\n  greeting: \"Hey, I'm\",\n  name: \"Jeremy Swerdlow.\",\n  statement: \"I deliver scalable, resilient services.\",\n  summary: \"I'm a software engineer living in Los Angeles, CA with experience \"\n  + \"designing and implementing scalable backend solutions built in containerized or \"\n  + \"serverless architecture.\",\n};\n\nexport const about = {\n  header: \"About Me\",\n  paragraphs: [\n    \"Hi! I'm Jeremy, a software engineer based in Los Angeles, CA.\",\n    \"I enjoy building backends people can rely on, supporting applications, middleware \"\n    + \"or whatever else is needed. With any project I work on, I aim to deliver a \"\n    + \"product my customers can rely on that can be easily monitored and extended by \"\n    + \"others as well.\",\n    \"After graduating Earlham College in 2018, I joined Bloomberg LP's engineering \"\n    + \"team in NYC. first providing machine learning models to enrich legal documents, \"\n    + \"then designing and implementing a scalable framework for tests involving \"\n    + \"containerization as part of continuous integration in an isolated environment.\",\n    \"More recently I have joined Amazon Music's development team, helping to work on \"\n    + \"ways for artists to connect with their fans.\",\n  ],\n  recentSkills: {\n    summary: \"These are some of the technologies I've been working with most recently:\",\n    skills: [\n      \"AWS Suite\",\n      \"Java 8\",\n      \"Python 3\",\n      \"React\",\n      \"React Native\",\n      \"TypeScript\",\n    ]\n  }\n};\n\nexport const experience = {\n  header: \"Where I've Worked\",\n  jobs: [\n    {\n      company: \"Amazon Music\",\n      companyLink: \"https://music.amazon.com\",\n      title: \"Software Development Engineer\",\n      location: \"Los Angeles, California\",\n      start: \"Jul 2020\",\n      end: \"Present\",\n      points: [\n        \"Provide more than 35,000 artists and labels with data and tools to better \"\n        + \"understand and connect with fans via a cross-platform application \"\n        + \"supported by a serverless backend running on Amazon Web Services's Lambda \"\n        + \"with DynamoDB, being monitored using CloudWatch.\",\n        \"Notify over 55,000,000 fans when their favorite artists are livestreaming by \"\n        + \"allowing musicians to link their Twitch accounts to their Amazon Music \"\n        + \"profiles.\",\n      ],\n    },\n    {\n      company: \"Bloomberg LP\",\n      companyLink: \"https://www.bloomberg.com/company\",\n      title: \"Software Engineer\",\n      location: \"New York, New York\",\n      start: \"Sep 2018\",\n      end: \"Jul 2020\",\n      points: [\n        \"Orchestrated machine allocation and state for more than 10,000 builds daily \"\n        + \"across hundreds of Jenkins instances with a stateless, distributed service \"\n        + \"written in Python, Java and Go using Apache Kafka for queueing.\",\n        \"Led design and development of solution to simplify and optimize user \"\n        + \"onboarding for container-driven testing with Docker and Docker Compose in an \"\n        + \"ephemeral, isolated environment allowing for meaningful performance metrics \"\n        + \"in addition to testing success.\",\n        \"Wrapped access to document enriching services in an API built with Java Spring \"\n        + \"for use in an ingestion workflow processing more than a hundred thousand \"\n        + \"documents daily and in a batch job marking up historic records.\",\n      ],\n    },\n    {\n      company: \"CoverMyMeds\",\n      companyLink: \"https://www.covermymeds.com/main\",\n      title: \"Data Science Intern\",\n      location: \"Columbus, Ohio\",\n      start: \"May 2017\",\n      end: \"Aug 2017\",\n      points: [\n        \"Increased the F1-score of a random forest decision tree generated from more \"\n        + \"than 300,000,000 data points with Python’s XGBoost library by more than 2%.\",\n        \"Extended the Bokeh Python library to build a containerized standalone GUI for \"\n        + \"business analysts to make informed decisions about client impact when \"\n        + \"adjusting the confidence levels of our model.\",\n      ],\n    },\n    {\n      company: \"Clio Muse Tours\",\n      companyLink: \"https://cliomusetours.com\",\n      title: \"Intern\",\n      location: \"Athens, Greece\",\n      start: \"Feb 2017\",\n      end: \"Apr 2017\",\n      points: [\n        \"Gathered, cleaned, categorized, and presented data to the company’s business \"\n        + \"analysts on potential expansion locations for tours across Europe and North \"\n        + \"America as part of an effort to provide global service via their app.\",\n      ],\n    },\n    {\n      company: \"Idexx Laboratories\",\n      companyLink: \"https://www.idexx.com\",\n      title: \"SAP Development Intern\",\n      location: \"Portland, Maine\",\n      start: \"May 2016\",\n      end: \"Jul 2016\",\n      points: [\n        \"Modernized an internal enterprise resource planning tool using \"\n        + \"SAPUI5, an XML with JavaScript controller to offer improved performance and \"\n        + \"cross platform usability.\",\n      ],\n    },\n  ],\n};\n\nexport const skills = {\n  header: \"Skills\",\n  ratingInfo: \"Skills graded on a scale of 1-5, from (1: beginner) to (5: proficient)\",\n};\n\nexport const projects = {\n  header: \"Projects\",\n  underConstruction: \"This section is under construction. Please check back later!\"\n}\n\nexport const contacts = {\n  header: \"Next Steps\",\n  subheader: \"Say Hello!\",\n  summary: \"I always love to hear from other people interested or involved in tech. \"\n  + \"Please make use of each of the below means of contact to reach out, whether it's \"\n  + \"just to ask a question or invite me to collaborate on a project. Thanks!\",\n  list: [\n    {\n      \"title\": \"Email\",\n      \"icon\": <MailOutlined />,\n      \"link\": \"mailto:jeremyjswerdlow@gmail.com\",\n      \"text\": \"jeremy.j.swerdlow@gmail.com\",\n    }, {\n      \"title\": \"Phone\",\n      \"icon\": <MobileOutlined />,\n      \"link\": \"tel:+1-207-712-1044\",\n      \"text\": \"207 712 1044\",\n    }, {\n      \"title\": \"LinkedIn\",\n      \"icon\": <LinkedinFilled />,\n      \"link\": \"https://linkedin.com/in/jeremyswerdlow\",\n      \"text\": \"/in/jeremyswerdlow\",\n    }, {\n      \"title\": \"GitHub\",\n      \"icon\": <GithubOutlined />,\n      \"link\": \"https://github.com/jeremyswerdlow\",\n      \"text\": \"github.com/jeremyswerdlow\",\n    },\n  ]\n};","import React, { FC, forwardRef, Ref } from \"react\";\nimport { Descriptions, Badge } from \"antd\";\nimport { SectionHeader, StyledParagraph, StyledText } from \"../common\";\nimport { Section } from \"../common/textBodies/Section\";\n\ntype AboutBodyProps = {\n  paragraphs: string[]\n}\n\nconst AboutBody: FC<AboutBodyProps> = (props) => {\n  return (\n    <>\n      {\n        props.paragraphs.map((paragraph: string) =>\n          <div key={Math.random().toString(36).substring(7)}>\n            <StyledParagraph>{paragraph}</StyledParagraph>\n          </div>\n        )\n      }\n    </>\n  );\n}\n\ntype AboutSectionProps = {\n  about: {\n    header: string,\n    paragraphs: string[],\n    recentSkills: {\n      summary: string,\n      skills: string[],\n    }\n  }\n};\n\nexport const AboutSection = forwardRef((props: AboutSectionProps, ref: Ref<HTMLDivElement>) => {\n  return (\n    <Section ref={ref} style={{paddingTop: \"100px\"}} >\n      <Descriptions\n        title={ <SectionHeader title={props.about.header} num=\"01.\" /> }\n      >\n        <Descriptions.Item span={3}>\n          <AboutBody\n            paragraphs={[...props.about.paragraphs, props.about.recentSkills.summary]}\n          />\n        </Descriptions.Item>\n        {\n          props.about.recentSkills.skills.map((skill: string) =>\n            <Descriptions.Item span={1} key={`${skill}-recent`}>\n              <Badge\n                status=\"processing\"\n                text={\n                  <StyledText style={{fontFamily: \"'Roboto Mono'\", marginLeft: \"15px\"}}>\n                    {skill}\n                  </StyledText>\n                }\n              />\n            </Descriptions.Item>\n          )\n        }\n      </Descriptions>\n    </Section>\n  );\n});","import React, { forwardRef, Ref } from \"react\";\nimport { Section, SectionHeader, StyledTitle, StyledParagraph } from \"../common\";\nimport { Table } from \"antd\";\n\ntype alignment = \"right\" | \"left\" | \"center\" | undefined\n\ntype record = {\n  title: string,\n  icon: JSX.Element,\n  link: string,\n  text: string,\n};\n\nconst columns = [\n  {\n    dataIndex: \"icon\",\n    key: \"icon\",\n    width: \"10px\"\n  },\n  {\n    dataIndex: \"title\",\n    key: \"title\",\n  },\n  {\n    dataIndex: \"text\",\n    key: \"text\",\n    align: \"right\" as alignment,\n  }\n]\n\ntype ContactSectionProps = {\n  contacts: {\n    header: string,\n    subheader: string,\n    summary: string,\n    list: record[],\n  }\n};\n\nexport const ContactSection = forwardRef((props: ContactSectionProps, ref: Ref<HTMLDivElement>) => {\n  return (\n    <Section ref={ref} style={{paddingTop: \"100px\"}} >\n      <SectionHeader title={props.contacts.header} num=\"05.\" />\n      <StyledTitle>{props.contacts.subheader}</StyledTitle>\n      <StyledParagraph>{props.contacts.summary}</StyledParagraph>\n      <Table\n        columns={columns}\n        dataSource={props.contacts.list}\n        onRow={(record, _) => {\n          return { onClick: _ => window.open(record.link, \"_blank\") };\n        }}\n        pagination={false}\n        showHeader={false}\n      />\n    </Section>\n  );\n});\n","import React, { FC, forwardRef, Ref } from \"react\";\nimport { Tabs, Row, Divider, Badge, List } from \"antd\";\nimport { colors, SectionHeader, Section, StyledText, StyledParagraph } from \"../common\";\n\ntype StyledJobProps = {\n  job: {\n    company: string,\n    companyLink?: string,\n    title: string,\n    location: string,\n    start: string,\n    end: string,\n    points: string[],\n  }\n}\n\nconst StyledJob: FC<StyledJobProps> = (props) => {\n  return (\n    <>\n      <Row>\n        <StyledText style={{fontSize: \"18px\", color: colors.primary}} >\n          {props.job.title}\n        </StyledText>\n        <Divider type=\"vertical\" style={{fontSize: \"32px\", margin: \"0px 15px\"}} />\n        <StyledText style={{fontSize: \"18px\", color: colors.highlight}} >\n          <a\n            href={props.job.companyLink}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {props.job.company}\n          </a>\n        </StyledText>\n      </Row>\n      <Row style={{fontSize: \"14px\", color: colors.secondary}} >\n        {`${props.job.start} - ${props.job.end}`}\n      </Row>\n      <List\n        dataSource={props.job.points}\n        renderItem={(point) =>\n          <List.Item style={{borderBottomWidth: \"0px\"}}>\n            <List.Item.Meta\n              avatar={ <Badge status=\"processing\" />}\n              description={\n                <StyledParagraph style={{marginBottom: \"0px\"}} >\n                  {point}\n                </StyledParagraph>\n              }\n            />\n          </List.Item>\n        }\n      />\n    </>\n  );\n}\n\ntype ExperienceSectionProps = {\n  experience: {\n    header: string,\n    jobs: {\n      company: string,\n      title: string,\n      location: string,\n      start: string,\n      end: string,\n      points: string[],\n    }[],\n  }\n};\n\nexport const ExperienceSection = forwardRef((props:ExperienceSectionProps, ref: Ref<HTMLDivElement>) => {\n  return (\n    <Section ref={ref} style={{paddingTop: \"175px\"}} >\n      <SectionHeader title={props.experience.header} num=\"02.\" />\n      <Tabs\n        size=\"small\"\n        style={{marginTop: \"25px\", fontFamily: \"'Roboto Mono'\"}}\n        tabPosition=\"left\"\n      >\n        {\n          props.experience.jobs.map((job) =>\n            <Tabs.TabPane tab={job.company} key={job.company}>\n              <StyledJob job={job} />\n            </Tabs.TabPane>\n          )\n        }\n      </Tabs>\n    </Section>\n  );\n});","import React, { forwardRef, Ref } from \"react\";\nimport { Section, SectionHeader, StyledText } from \"../common\";\nimport { Empty } from \"antd\";\n\ntype ProjectSectionProps = {\n  projects: {\n    header: string,\n    underConstruction?: string,\n  }\n};\n\nexport const ProjectSection = forwardRef((props: ProjectSectionProps, ref: Ref<HTMLDivElement>) => {\n    return (\n        <Section ref={ref} style={{paddingTop: \"100px\"}} >\n            <SectionHeader title={props.projects.header} num=\"04.\"/>\n            <Empty\n                description={<StyledText>{props.projects.underConstruction}</StyledText>}\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n        </Section>\n    )\n});","import React, { Ref, forwardRef } from \"react\";\nimport { Section, SectionHeader, StyledParagraph } from \"../common\";\nimport { Rate, Col, Row, Divider } from \"antd\";\n\ntype SkillsSectionProps = {\n  skills: {\n    header: string,\n    ratingInfo: string,\n  },\n  ratings: {\n    [key: string]: {\n      [key: string]: number\n    }\n  },\n};\n\nexport const SkillsSection = forwardRef((props: SkillsSectionProps, ref: Ref<HTMLDivElement>) => {\n  return (\n    <Section ref={ref} style={{paddingTop: \"100px\"}} >\n      <SectionHeader title={props.skills.header} num=\"03.\" />\n      {\n        Object.entries(props.ratings).map(([skillGroup, groupRatings]) =>\n        <div key={skillGroup}>\n          <Divider orientation=\"right\">{skillGroup}</Divider>\n          <Row>\n            {\n              Object.entries(groupRatings).map(([name, rating]) =>\n                <Col\n                  key={name}\n                  style={{\n                    width: \"calc(100%/3)\",\n                    marginBottom: \"25px\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <StyledParagraph style={{width: \"135px\", margin: \"0px auto\"}}>{name}</StyledParagraph>\n                  <Rate style={{margin: \"auto\"}} disabled defaultValue={rating}/>\n                </Col>\n              )\n            }\n          </Row>\n        </div>\n        )\n      }\n    </Section>\n  );\n});","import React, { Ref, forwardRef } from \"react\";\nimport { Row, Typography } from \"antd\";\nimport { colors, StyledParagraph, StyledTitle } from \"../common\";\n\ntype WelcomeSectionProps = {\n  welcome: {\n    greeting: string,\n    name: string,\n    statement: string,\n    summary: string,\n  }\n}\n\nexport const WelcomeSection = forwardRef((props: WelcomeSectionProps, ref: Ref<HTMLDivElement>) => {\n  return (\n    <div ref={ref} style={{\"paddingTop\": \"175px\"}}>\n      <Row>\n        <Typography.Text\n          style={{fontFamily: \"'Roboto Mono'\", fontSize: \"18px\", color: colors.highlight}}\n        >\n          {props.welcome.greeting}\n        </Typography.Text>\n      </Row>\n      <Row>\n        <StyledTitle style={{\"marginBottom\": \"10px\"}}>{props.welcome.name}</StyledTitle>\n      </Row>\n      <Row>\n        <StyledTitle style={{color: colors.secondary}}>{props.welcome.statement}</StyledTitle>\n      </Row>\n      <Row style={{width: \"50%\"}}>\n        <StyledParagraph style={{marginTop: \"10px\"}}>{props.welcome.summary}</StyledParagraph>\n      </Row>\n    </div>\n  );\n});","import React, { FC, createRef, RefObject } from 'react';\nimport { Layout } from 'antd';\nimport { SiteMenu } from './SiteMenu';\nimport { ContactSidebar } from './ContactSidebar';\nimport { contacts, links, welcome, about, experience, ratings, skills, projects } from './common';\nimport {\n  AboutSection,\n  ContactSection,\n  ExperienceSection,\n  ProjectSection,\n  SkillsSection,\n  WelcomeSection,\n} from './sections';\n\nconst App: FC = () => {\n\n  const sectionList = links.map(({title, link}) => link);\n  sectionList.push(\"#welcome\");\n  const sectionReducer = (\n    accumulator: {[key: string]: RefObject<HTMLDivElement>}, val: string\n  ) => {\n    accumulator[val] = createRef<HTMLDivElement>()\n    return accumulator\n  };\n  const sectionRefMap = sectionList.reduce(sectionReducer, {});\n\n  const scrollIntoView = (obj: {key: string}) => {\n    sectionRefMap[obj.key]!.current?.scrollIntoView({behavior: \"smooth\"});\n  }\n\n  return (\n    <Layout>\n      <Layout.Header style={{padding: \"0px\", position: \"fixed\", width: \"100%\", zIndex: 100}} >\n        <SiteMenu links={links} onSectionClick={scrollIntoView}/>\n      </Layout.Header>\n      <Layout>\n        <ContactSidebar contacts={contacts.list} />\n        <Layout.Content style={{margin: \"0px 125px 50px 125px\", alignItems: \"end\"}} >\n          <WelcomeSection welcome={welcome} ref={sectionRefMap[\"#welcome\"]}/>\n          <AboutSection about={about} ref={sectionRefMap[\"#about\"]}/>\n          <ExperienceSection experience={experience} ref={sectionRefMap[\"#jobs\"]}/>\n          <SkillsSection skills={skills} ratings={ratings} ref={sectionRefMap[\"#skills\"]}/>\n          <ProjectSection projects={projects} ref={sectionRefMap[\"#projects\"]} />\n          <ContactSection contacts={contacts} ref={sectionRefMap[\"#contact\"]}/>\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport 'antd/dist/antd.dark.css';\nimport 'fontsource-roboto';\nimport \"fontsource-roboto-mono\";\n\nimport App from './App';\nimport { NotFoundPage } from './NotFoundPage';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/about\">\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"*\" component={NotFoundPage} />\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import React, { FC } from \"react\";\nimport { Section, SectionHeader, colors, StyledParagraph, ClearTextButton } from \"./common\";\nimport { WarningOutlined } from \"@ant-design/icons\";\n\ntype NotFoundPageProps = {\n\n}\n\nexport const NotFoundPage: FC<NotFoundPageProps> = (props) => {\n  return (\n    <Section style={{paddingTop: \"100px\", width: \"60%\", marginTop: \"0px\"}}>\n      <SectionHeader title=\"Uh Oh!\" num=\"404.\" />\n      <div style={{textAlign: \"center\", fontSize: \"128px\"}} >\n        <WarningOutlined style={{color: colors.secondary}} />\n      </div>\n      <StyledParagraph style={{textAlign: \"center\"}} >\n        Seems you've stumbled somewhere you weren't supposed to!\n      </StyledParagraph>\n      <div style={{marginTop: \"75px\", display: \"flex\", justifyContent: \"center\"}}>\n        <ClearTextButton href=\"/\">\n          This button will take you back to where you should be.\n        </ClearTextButton>\n      </div>\n    </Section>\n  );\n};"],"sourceRoot":""}