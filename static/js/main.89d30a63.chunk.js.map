{"version":3,"sources":["common/constants/Content.tsx","common/buttons/Buttons.tsx","common/constants/Colors.tsx","common/constants/Ratings.tsx","common/textBodies/Section.tsx","common/textBodies/SectionHeader.tsx","common/textBodies/StyledText.tsx","ContactSidebar.tsx","sections/AboutSection.tsx","sections/ContactSection.tsx","sections/ExperienceSection.tsx","modals/ProjectModal.tsx","sections/ProjectSection/ProjectScroller.tsx","sections/ProjectSection/ProjectSection.tsx","sections/SkillsSection.tsx","sections/WelcomeSection.tsx","SiteMenu.tsx","App.tsx","index.tsx","NotFoundPage.tsx"],"names":["projectStatus","ClearTextButton","props","href","onClick","style","children","colors","blue","primary","grey","links","title","link","welcome","greeting","name","statement","summary","about","header","paragraphs","recentSkills","skills","experience","jobs","company","companyLink","location","start","end","points","ratingInfo","projects","buttonText","projectList","image","CodeOutlined","status","stable","BranchesOutlined","HomeOutlined","ClockCircleOutlined","notStarted","SyncOutlined","DashboardOutlined","contacts","subheader","list","MailOutlined","MobileOutlined","LinkedinFilled","GithubOutlined","ratings","Section","forwardRef","ref","width","margin","marginTop","SectionHeader","display","justifyContent","orientation","num","Text","color","highlight","fontFamily","fontSize","marginRight","StyledParagraph","Paragraph","ellipsis","secondary","StyledText","StyledTitle","Title","CenteredVerticalLine","styled","div","ContactSider","Layout","Sider","ContactButton","Button","ContactSidebar","map","icon","key","size","shape","target","type","AboutBody","paragraph","Math","random","toString","substring","AboutSection","paddingTop","Item","span","skill","text","marginLeft","columns","dataIndex","align","ContactSection","dataSource","onRow","record","_","window","open","pagination","showHeader","StyledJob","job","rel","renderItem","point","borderBottomWidth","Meta","avatar","description","marginBottom","ExperienceSection","tabPosition","TabPane","tab","ProjectModal","centered","footer","onCancel","onClose","visible","label","projectInfo","paddingBottom","block","ProjectScrollItem","React","useState","setVisible","project","ProjectScroller","grid","gutter","xs","sm","md","lg","xl","xxl","ProjectSection","SkillsSection","Object","entries","skillGroup","groupRatings","rating","disabled","defaultValue","WelcomeSection","SiteMenu","mode","onSectionClick","selectable","reverse","float","App","sectionList","push","sectionRefMap","reduce","accumulator","val","createRef","Header","padding","position","zIndex","obj","current","scrollIntoView","behavior","Content","alignItems","ReactDOM","render","StrictMode","basename","exact","path","component","textAlign","WarningOutlined","document","getElementById"],"mappings":"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","file":"static/js/main.89d30a63.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  BranchesOutlined,\n  ClockCircleOutlined,\n  CodeOutlined,\n  DashboardOutlined,\n  GithubOutlined,\n  HomeOutlined,\n  LinkedinFilled,\n  MailOutlined,\n  MobileOutlined,\n  SyncOutlined,\n} from \"@ant-design/icons\";\n\nexport enum projectStatus {\n  notStarted = \"default\",\n  inProgress = \"processing\",\n  stable = \"success\",\n  blocked = \"warning\",\n}\n\nexport const links = [\n  {\n    title: \"About Me\",\n    link: \"#about\",\n  },\n  {\n    title: \"Experience\",\n    link: \"#jobs\",\n  },\n  {\n    title: \"Skills\",\n    link: \"#skills\",\n  },\n  {\n    title: \"Portfolio\",\n    link: \"#projects\",\n  },\n  {\n    title: \"Contact\",\n    link: \"#contact\",\n  },\n]\n\nexport const welcome = {\n  greeting: \"Hey, I'm\",\n  name: \"Jeremy Swerdlow.\",\n  statement: \"I deliver scalable, resilient services.\",\n  summary: \"I'm a software engineer living in Los Angeles, CA with experience \"\n  + \"designing and implementing scalable backend solutions built in containerized or \"\n  + \"serverless architecture.\",\n};\n\nexport const about = {\n  header: \"About Me\",\n  paragraphs: [\n    \"Hi! I'm Jeremy, a software engineer based in Los Angeles, CA.\",\n    \"I enjoy building backends people can rely on, supporting applications, middleware \"\n    + \"or whatever else is needed. With any project I work on, I aim to deliver a \"\n    + \"product my customers can rely on that can be easily monitored and extended by \"\n    + \"others as well.\",\n    \"After graduating Earlham College in 2018, I joined Bloomberg LP's engineering \"\n    + \"team in NYC, first providing machine learning models to enrich legal documents, \"\n    + \"then designing and implementing a scalable framework for tests involving \"\n    + \"containerization as part of continuous integration in an isolated environment.\",\n    \"More recently I have joined Amazon Music's development team, helping to work on \"\n    + \"ways for artists to connect with their fans.\",\n  ],\n  recentSkills: {\n    summary: \"These are some of the technologies I've been working with most recently:\",\n    skills: [\n      \"AWS Suite\",\n      \"Java 8\",\n      \"Python 3\",\n      \"React\",\n      \"React Native\",\n      \"TypeScript\",\n    ]\n  }\n};\n\nexport const experience = {\n  header: \"Experience\",\n  jobs: [\n    {\n      company: \"Amazon Music\",\n      companyLink: \"https://music.amazon.com\",\n      title: \"Software Development Engineer\",\n      location: \"Los Angeles, California\",\n      start: \"Jul 2020\",\n      end: \"Present\",\n      points: [\n        \"Provide more than 35,000 artists and labels with data and tools to better \"\n        + \"understand and connect with fans via a cross-platform application \"\n        + \"supported by a serverless backend running on Amazon Web Services's Lambda \"\n        + \"with DynamoDB, being monitored using CloudWatch.\",\n        \"Notify over 55,000,000 fans when their favorite artists are livestreaming by \"\n        + \"allowing musicians to link their Twitch accounts to their Amazon Music \"\n        + \"profiles.\",\n      ],\n    },\n    {\n      company: \"Bloomberg LP\",\n      companyLink: \"https://www.bloomberg.com/company\",\n      title: \"Software Engineer\",\n      location: \"New York, New York\",\n      start: \"Sep 2018\",\n      end: \"Jul 2020\",\n      points: [\n        \"Orchestrated machine allocation and state for more than 10,000 builds daily \"\n        + \"across hundreds of Jenkins instances with a stateless, distributed service \"\n        + \"written in Python, Java and Go using Apache Kafka for queueing.\",\n        \"Led design and development of solution to simplify and optimize user \"\n        + \"onboarding for container-driven testing with Docker and Docker Compose in an \"\n        + \"ephemeral, isolated environment allowing for meaningful performance metrics \"\n        + \"in addition to testing success.\",\n        \"Wrapped access to document enriching services in an API built with Java Spring \"\n        + \"for use in an ingestion workflow processing more than a hundred thousand \"\n        + \"documents daily and in a batch job marking up historic records.\",\n      ],\n    },\n    {\n      company: \"CoverMyMeds\",\n      companyLink: \"https://www.covermymeds.com/main\",\n      title: \"Data Science Intern\",\n      location: \"Columbus, Ohio\",\n      start: \"May 2017\",\n      end: \"Aug 2017\",\n      points: [\n        \"Increased the F1-score of a random forest decision tree generated from more \"\n        + \"than 300,000,000 data points with Python’s XGBoost library by more than 2%.\",\n        \"Extended the Bokeh Python library to build a containerized standalone GUI for \"\n        + \"business analysts to make informed decisions about client impact when \"\n        + \"adjusting the confidence levels of our model.\",\n      ],\n    },\n    {\n      company: \"Clio Muse Tours\",\n      companyLink: \"https://cliomusetours.com\",\n      title: \"Intern\",\n      location: \"Athens, Greece\",\n      start: \"Feb 2017\",\n      end: \"Apr 2017\",\n      points: [\n        \"Gathered, cleaned, categorized, and presented data to the company’s business \"\n        + \"analysts on potential expansion locations for tours across Europe and North \"\n        + \"America as part of an effort to provide global service via their app.\",\n      ],\n    },\n    {\n      company: \"Idexx Laboratories\",\n      companyLink: \"https://www.idexx.com\",\n      title: \"SAP Development Intern\",\n      location: \"Portland, Maine\",\n      start: \"May 2016\",\n      end: \"Jul 2016\",\n      points: [\n        \"Modernized an internal enterprise resource planning tool using \"\n        + \"SAPUI5, an XML with JavaScript controller to offer improved performance and \"\n        + \"cross platform usability.\",\n      ],\n    },\n  ],\n};\n\nexport const skills = {\n  header: \"Skills\",\n  ratingInfo: \"Skills are self-graded on a scale of 1-5, from (1: beginner) to \"\n  + \"(5: proficient).\",\n};\n\nexport const projects = {\n  header: \"Portfolio\",\n  buttonText: \"See the code here\",\n  projectList: [\n    {\n      title: \"Grook\",\n      summary: \"Grook is a Turing complete (TC) language meant to be a parody of the \"\n      + \"Ook programming language, but instead of it being so easy a monkey could \"\n      + \"write it, it's so that a Groot can.\",\n      link: \"https://github.com/jeremyswerdlow/grook\",\n      image: <CodeOutlined />,\n      status: projectStatus.stable,\n    },\n    {\n      title: \"Dynamic Decision Trees\",\n      summary: \"Decision Trees are an easily understood machine learning algorithm \"\n      + \"based on splitting data depending on a calculated value at each level of the \"\n      + \"tree, such that the data grouped by the split is most similar. This allows \"\n      + \"for then using the model to predict the outcome of a similarly formatted \"\n      + \"occurrence of data. This project extends the functionality of these trees, \"\n      + \"allowing for new data to be added even after the initial training of the tree \"\n      + \"has completed. By doing this, the costly operation of training does not \"\n      + \"reoccur, but instead is delayed while still benefitting from newer data.\",\n      link: \"https://github.com/jeremyswerdlow/Dynamic-Decision-Trees\",\n      image: <BranchesOutlined />,\n      status: projectStatus.stable\n    },\n    {\n      title: \"Personal Website\",\n      summary: \"This website was built after starting a new position which involved \"\n      + \"more front end development than I had done in previous experiences. It is \"\n      + \"written in Typescript with React and the Ant Design framework.\",\n      link: \"https://github.com/jeremyswerdlow/about\",\n      image: <HomeOutlined />,\n      status: projectStatus.stable,\n    },\n    {\n      title: \"Isolation Clock\",\n      summary: \"This was a way to track when I'd interacted with people during Covid. \"\n      + \"It uses Docker to run a PostgreSQL database for storing the data, with Python \"\n      + \"3 using Flask for the frontend API interactions. This does not provide any \"\n      + \"user interface, but instead makes use of Python's built in CLI tooling, \"\n      + \"argparse.\",\n      link: \"https://github.com/jeremyswerdlow/isolation-clock\",\n      image: <ClockCircleOutlined />,\n      status: projectStatus.notStarted,\n    },\n    {\n      title: \"Random Shuffle\",\n      summary: \"Just a simple project I threw together to allow people to get a random \"\n      + \"permutation of a set of options that uses all the options. Useful for teams \"\n      + \"trying to decide an order, or shuffling a playlist of music, whatever you \"\n      + \"need. Written in Typescript with React and Material UI.\",\n      link: \"https://github.com/jeremyswerdlow/random-shuffle\",\n      image: <SyncOutlined />,\n      status: projectStatus.stable,\n    },\n    {\n      title: \"OSRS Skills Dashboard\",\n      summary: \"Old School Runescape is an MMORPG meant to capture the nostalgia of \"\n      + \"the Runescape prior to its Evolution of Combat transformation. While this \"\n      + \"provides an enjoyable and fun reminder of a game I love, its website leaves \"\n      + \"much to be desired in terms of tracking your progress towards goals. This \"\n      + \"site provides a more modern delivery of the skills tracked on the highscores \"\n      + \"not just for OSRS itself, but for private servers as well. It relies on React \"\n      + \"written in Typescript with Ant Design for its interface, while scraping data \"\n      + \"from the respective websites themselves with Axios and Cheerio.\",\n      link: \"https://github.com/jeremyswerdlow/rs-skills-dashboard\",\n      image: <DashboardOutlined />,\n      status: projectStatus.stable,\n    },\n  ]\n}\n\nexport const contacts = {\n  header: \"Contact\",\n  subheader: \"Say Hello!\",\n  summary: \"I always love to hear from other people interested or involved in tech. \"\n  + \"Please make use of each of the below means of contact to reach out, whether it's \"\n  + \"just to ask a question or invite me to collaborate on a project. Thanks!\",\n  list: [\n    {\n      \"title\": \"Email\",\n      \"icon\": <MailOutlined />,\n      \"link\": \"mailto:jeremyjswerdlow@gmail.com\",\n      \"text\": \"jeremy.j.swerdlow@gmail.com\",\n      \"key\": \"email\",\n    }, {\n      \"title\": \"Phone\",\n      \"icon\": <MobileOutlined />,\n      \"link\": \"tel:+1-207-712-1044\",\n      \"text\": \"207 712 1044\",\n      \"key\": \"phone\",\n    }, {\n      \"title\": \"LinkedIn\",\n      \"icon\": <LinkedinFilled />,\n      \"link\": \"https://linkedin.com/in/jeremyswerdlow\",\n      \"text\": \"/in/jeremyswerdlow\",\n      \"key\": \"linkedin\",\n    }, {\n      \"title\": \"GitHub\",\n      \"icon\": <GithubOutlined />,\n      \"link\": \"https://github.com/jeremyswerdlow\",\n      \"text\": \"github.com/jeremyswerdlow\",\n      \"key\": \"github\",\n    },\n  ]\n};","import React, { FC } from \"react\";\nimport { Button } from \"antd\";\n\ntype ButtonProps = {\n  href?: string,\n  style?: {},\n  onClick?: () => void,\n};\n\nexport const ClearTextButton: FC<ButtonProps> = (props) => {\n  return (\n    <Button\n      href={props.href}\n      onClick={props.onClick}\n      style={{\n        ...props.style\n      }}\n    >\n      {props.children}\n    </Button>\n  );\n};","import { blue, grey } from \"@ant-design/colors\";\n\nexport const colors = {\n  \"highlight\": blue.primary,\n  \"primary\": \"#FFFFFF\",\n  \"secondary\": grey[3],\n};","export const ratings = {\n  \"Programming Languages\": {\n    \"C\": 3,\n    \"C++\": 3,\n    \"Golang\": 4,\n    \"Groovy\": 4,\n    \"Haskell\": 3,\n    \"Java\": 4,\n    \"JavaScript\": 3,\n    \"Python\": 5,\n    \"Ruby\": 3,\n    \"Scala\": 2,\n    \"Shell\": 3,\n    \"TypeScript\": 3,\n  },\n  \"Frameworks\": {\n    \"Flask\": 5,\n    \"Pytest\": 5,\n    \"React\": 4,\n    \"Spring\": 3,\n  },\n  \"Tools\": {\n    \"Ansible\": 3,\n    \"Apache Kafka\": 4,\n    \"Chef\": 5,\n    \"Docker\": 5,\n    \"Docker-Compose\": 5,\n    \"Jenkins\": 5,\n    \"MySQL\": 4,\n    \"PostgreSQL\": 3,\n    \"Terraform\": 4,\n  },\n  \"Libraries\": {\n    \"Pandas\": 4,\n    \"Scikit-learn\": 3,\n  },\n  \"Concepts\": {\n    \"12 Factor App\": 3,\n    \"Agile Methodologies\": 5,\n    \"Configuration as code\": 3,\n    \"Containerization\": 4,\n    \"Microservice Architecture\": 4,\n    \"Serverless Architecture\": 4,\n  },\n};","import React, { forwardRef, Ref } from \"react\";\n\ntype SectionProps = {\n  style?: {},\n  children?: any,\n};\n\nexport const Section = forwardRef((props: SectionProps, ref: Ref<HTMLDivElement>) => {\n  return (\n    <div\n      ref={ref}\n      style={{\n        width: \"80%\",\n        margin: \"auto\",\n        marginTop: \"150px\",\n        ...props.style}}\n      >\n      {props.children}\n    </div>\n  );\n});","import React, { FC } from \"react\";\nimport { Divider, Typography } from \"antd\";\nimport { colors } from \"..\";\n\ntype SectionHeaderProps = {\n  title: string,\n  num?: string,\n  orientation?: \"left\" | \"center\" | \"right\",\n}\n\nexport const SectionHeader: FC<SectionHeaderProps> = (props) => {\n  return (\n    <Divider\n      style={{display: \"flex\", justifyContent: \"space-between\"}}\n      orientation={props.orientation || \"left\"}\n    >\n      {props.num &&\n        <Typography.Text\n          style={{\n            color: colors.highlight,\n            fontFamily: \"'Roboto Mono'\",\n            fontSize: \"20px\",\n            marginRight: \"20px\"\n          }}\n        >\n          {props.num}\n        </Typography.Text>\n      }\n      <Typography.Text\n        style={{color: colors.primary, fontFamily: \"'Roboto'\", fontSize: \"20px\"}}\n      >\n        {props.title}\n      </Typography.Text>\n    </Divider>\n  );\n}","import React, { FC } from \"react\";\nimport { Typography } from \"antd\";\nimport { colors } from \"..\";\n\ntype StyledParagraphProps = {\n  style?: {}\n  ellipsis?: boolean\n};\n\nexport const StyledParagraph: FC<StyledParagraphProps> = (props) => {\n  return (\n    <Typography.Paragraph\n      ellipsis={props.ellipsis}\n      style={{\n        color: colors.secondary,\n        fontFamily: \"'Roboto'\",\n        fontSize: \"16px\",\n        ...props.style,\n      }}\n    >\n      {props.children}\n    </Typography.Paragraph>\n  );\n}\n\ntype StyledTextProps = {\n  style?: {}\n};\n\nexport const StyledText: FC<StyledTextProps> = (props) => {\n  return (\n    <Typography.Text\n      style={{\n        color: colors.secondary,\n        fontFamily: \"'Roboto'\",\n        fontSize: \"14px\",\n        ...props.style,\n      }}\n    >\n      {props.children}\n    </Typography.Text>\n  )\n}\n\ntype StyledTitleProps = {\n  style?: {}\n};\n\nexport const StyledTitle: FC<StyledTitleProps> = (props) => {\n  return (\n    <Typography.Title\n      style={{\n        color: colors.primary,\n        fontFamily: \"'Roboto'\",\n        fontSize: \"64px\",\n        ...props.style,\n      }}\n    >\n      {props.children}\n    </Typography.Title>\n  )\n}","import React, { FC } from \"react\";\nimport { Button, Layout } from \"antd\";\nimport styled from \"styled-components\";\n\nconst CenteredVerticalLine = styled.div`\n  width: 1px;\n  background-color: #177ddc;\n  height: 100px;\n  display: block;\n  margin: 10px auto auto auto;\n`;\n\nconst ContactSider = styled(Layout.Sider)`\n  background: transparent;\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  min-height: 100%;\n`;\n\nconst ContactButton = styled(Button)`\n  border-width: 0px;\n  display: block;\n  margin: auto;\n`;\n\ntype ContactSidebarProps = {\n  contacts: {title: string, icon: JSX.Element, link: string, text: string}[]\n}\n\nexport const ContactSidebar: FC<ContactSidebarProps> = (props) => {\n  return (\n    <ContactSider width={50} >\n      {props.contacts.map(({title, icon, link}) => {\n        return (\n          <ContactButton\n            key={`${title}-side`}\n            href={link}\n            icon={icon}\n            size=\"large\"\n            shape=\"circle\"\n            target=\"_blank\"\n            type=\"link\"\n          />\n        );\n      })}\n      <CenteredVerticalLine />\n    </ContactSider>\n  );\n};","import React, { FC, forwardRef, Ref } from \"react\";\nimport { Descriptions, Badge } from \"antd\";\nimport { Section, SectionHeader, StyledParagraph, StyledText } from \"../common\";\n\ntype AboutBodyProps = {\n  paragraphs: string[]\n}\n\nconst AboutBody: FC<AboutBodyProps> = (props) => {\n  return (\n    <>\n      {\n        props.paragraphs.map((paragraph: string) =>\n          <div key={Math.random().toString(36).substring(7)}>\n            <StyledParagraph>{paragraph}</StyledParagraph>\n          </div>\n        )\n      }\n    </>\n  );\n}\n\ntype AboutSectionProps = {\n  about: {\n    header: string,\n    paragraphs: string[],\n    recentSkills: {\n      summary: string,\n      skills: string[],\n    }\n  }\n};\n\nexport const AboutSection = forwardRef((props: AboutSectionProps, ref: Ref<HTMLDivElement>) => {\n  return (\n    <Section ref={ref} style={{paddingTop: \"100px\"}} >\n      <Descriptions\n        title={ <SectionHeader title={props.about.header} num=\"01.\" /> }\n      >\n        <Descriptions.Item span={3}>\n          <AboutBody\n            paragraphs={[...props.about.paragraphs, props.about.recentSkills.summary]}\n          />\n        </Descriptions.Item>\n        {\n          props.about.recentSkills.skills.map((skill: string) =>\n            <Descriptions.Item span={1} key={`${skill}-recent`}>\n              <Badge\n                status=\"processing\"\n                text={\n                  <StyledText style={{fontFamily: \"'Roboto Mono'\", marginLeft: \"15px\"}}>\n                    {skill}\n                  </StyledText>\n                }\n              />\n            </Descriptions.Item>\n          )\n        }\n      </Descriptions>\n    </Section>\n  );\n});","import React, { forwardRef, Ref } from \"react\";\nimport { Table } from \"antd\";\nimport { Section, SectionHeader, StyledParagraph, StyledTitle } from \"../common\";\n\ntype alignment = \"right\" | \"left\" | \"center\" | undefined\n\ntype record = {\n  title: string,\n  icon: JSX.Element,\n  link: string,\n  text: string,\n};\n\nconst columns = [\n  {\n    dataIndex: \"icon\",\n    key: \"icon\",\n    width: \"10px\"\n  },\n  {\n    dataIndex: \"title\",\n    key: \"title\",\n  },\n  {\n    dataIndex: \"text\",\n    key: \"text\",\n    align: \"right\" as alignment,\n  }\n]\n\ntype ContactSectionProps = {\n  contacts: {\n    header: string,\n    subheader: string,\n    summary: string,\n    list: record[],\n  }\n};\n\nexport const ContactSection = forwardRef((props: ContactSectionProps, ref: Ref<HTMLDivElement>) => {\n  return (\n    <Section ref={ref} style={{paddingTop: \"100px\"}} >\n      <SectionHeader title={props.contacts.header} num=\"05.\" />\n      <StyledTitle>{props.contacts.subheader}</StyledTitle>\n      <StyledParagraph>{props.contacts.summary}</StyledParagraph>\n      <Table\n        columns={columns}\n        dataSource={props.contacts.list}\n        onRow={(record, _) => {\n          return { onClick: _ => window.open(record.link, \"_blank\") };\n        }}\n        pagination={false}\n        showHeader={false}\n      />\n    </Section>\n  );\n});\n","import React, { FC, forwardRef, Ref } from \"react\";\nimport { Badge, Divider, List, Row, Tabs } from \"antd\";\nimport { colors, Section, SectionHeader, StyledParagraph, StyledText } from \"../common\";\n\ntype StyledJobProps = {\n  job: {\n    company: string,\n    companyLink?: string,\n    title: string,\n    location: string,\n    start: string,\n    end: string,\n    points: string[],\n  }\n}\n\nconst StyledJob: FC<StyledJobProps> = (props) => {\n  return (\n    <>\n      <Row>\n        <StyledText style={{fontSize: \"18px\", color: colors.primary}} >\n          {props.job.title}\n        </StyledText>\n        <Divider type=\"vertical\" style={{fontSize: \"32px\", margin: \"0px 15px\"}} />\n        <StyledText style={{fontSize: \"18px\", color: colors.highlight}} >\n          <a\n            href={props.job.companyLink}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {props.job.company}\n          </a>\n        </StyledText>\n      </Row>\n      <Row style={{fontSize: \"14px\", color: colors.secondary}} >\n        {`${props.job.start} - ${props.job.end}`}\n      </Row>\n      <List\n        dataSource={props.job.points}\n        renderItem={(point) =>\n          <List.Item style={{borderBottomWidth: \"0px\"}}>\n            <List.Item.Meta\n              avatar={ <Badge status=\"processing\" />}\n              description={\n                <StyledParagraph style={{marginBottom: \"0px\"}} >\n                  {point}\n                </StyledParagraph>\n              }\n            />\n          </List.Item>\n        }\n      />\n    </>\n  );\n}\n\ntype ExperienceSectionProps = {\n  experience: {\n    header: string,\n    jobs: {\n      company: string,\n      title: string,\n      location: string,\n      start: string,\n      end: string,\n      points: string[],\n    }[],\n  }\n};\n\nexport const ExperienceSection = forwardRef((props:ExperienceSectionProps, ref: Ref<HTMLDivElement>) => {\n  return (\n    <Section ref={ref} style={{paddingTop: \"175px\"}} >\n      <SectionHeader title={props.experience.header} num=\"02.\" />\n      <Tabs\n        size=\"small\"\n        style={{marginTop: \"25px\", fontFamily: \"'Roboto Mono'\"}}\n        tabPosition=\"left\"\n      >\n        {\n          props.experience.jobs.map((job) =>\n            <Tabs.TabPane tab={job.company} key={job.company}>\n              <StyledJob job={job} />\n            </Tabs.TabPane>\n          )\n        }\n      </Tabs>\n    </Section>\n  );\n});","import React, { FC } from \"react\";\nimport { Badge, Button, Col, Descriptions, Modal } from \"antd\";\nimport { colors, projects, projectStatus, StyledParagraph, StyledTitle } from \"../common\";\n\ntype ProjectModalProps = {\n  onClose: () => void,\n  visible: boolean,\n  title: React.ReactNode,\n  projectInfo: {\n    title: string,\n    summary: string,\n    link: string,\n    image: React.ReactNode,\n    status: projectStatus,\n  },\n};\n\nexport const ProjectModal: FC<ProjectModalProps> = (props) => {\n\n  const title = (\n    <StyledTitle style={{ marginBottom: \"5px\" }}>\n      {props.title}\n    </StyledTitle>\n  );\n\n  return (\n    <Modal\n      centered\n      footer={null}\n      onCancel={props.onClose}\n      title={title}\n      visible={props.visible}\n      width=\"80%\"\n    >\n      <Col>\n        <Descriptions size=\"small\">\n          <Descriptions.Item label=\"Status\" span={3}>\n            <Badge status={props.projectInfo.status} />\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Description\" span={3}>\n            <StyledParagraph style={{ fontSize: \"14px\", paddingBottom: \"10px\" }}>\n              {props.projectInfo.summary}\n            </StyledParagraph>\n          </Descriptions.Item>\n        </Descriptions>\n        <Button\n          block\n          href={props.projectInfo.link}\n          rel=\"noopener noreferrer\"\n          style={{color: colors.highlight }}\n          type=\"text\"\n          target=\"_blank\"\n        >\n          {projects.buttonText}\n        </Button>\n      </Col>\n    </Modal>\n  );\n};","import React, { FC } from \"react\";\nimport { Card, List } from \"antd\";\nimport { projectStatus, StyledParagraph } from \"../../common\";\nimport { ProjectModal } from \"../../modals\";\n\ntype ProjectScrollItemProps = {\n  project: {\n    title: string,\n    summary: string,\n    link: string,\n    image: {},\n    status: projectStatus,\n  }\n};\n\nexport const ProjectScrollItem: FC<ProjectScrollItemProps> = (props) => {\n  const [visible, setVisible] = React.useState(false);\n\n  const openModal = () => {\n    setVisible(true)\n  };\n  const closeModal = () => {\n    setVisible(false)\n  };\n\n  const icon = (\n    <a\n      href={props.project.link}\n      rel=\"noopener noreferrer\"\n      style={{margin: \"auto\"}}\n      target=\"_blank\"\n    >\n      {props.project.image}\n    </a>\n  );\n  const title = <>{icon} {props.project.title}</>;\n\n  const { project } = props\n  return (\n    <>\n    <ProjectModal\n      onClose={closeModal}\n      projectInfo={project}\n      title={title}\n      visible={visible}\n    >\n      {project.image}\n    </ProjectModal>\n    <Card title={title} onClick={openModal} type=\"inner\">\n      <StyledParagraph ellipsis style={{fontSize: \"14px\", marginBottom: \"0px\"}}>\n        {project.summary}\n      </StyledParagraph>\n    </Card>\n    </>\n  );\n};\n\ntype ProjectScrollerProps = {\n  projects: {\n    title: string,\n    summary: string,\n    link: string,\n    image: {},\n    status: projectStatus,\n  }[],\n};\n\nexport const ProjectScroller: FC<ProjectScrollerProps> = (props) => {\n  return (\n    <List\n      dataSource={props.projects}\n      grid={{ gutter: 16, xs: 1, sm: 1, md: 1, lg: 2, xl: 2, xxl: 3 }}\n      renderItem={project => (\n        <List.Item>\n          <ProjectScrollItem project={project} />\n        </List.Item>\n      )}\n    />\n  );\n};","import React, { forwardRef, Ref } from \"react\";\nimport { projectStatus, Section, SectionHeader } from \"../../common\";\nimport { ProjectScroller } from \"./ProjectScroller\";\n\ntype ProjectSectionProps = {\n  projects: {\n    header: string,\n    underConstruction?: string,\n    projectList: {\n      title: string,\n      summary: string,\n      link: string,\n      image: {},\n      status: projectStatus,\n    }[],\n  },\n};\n\nexport const ProjectSection = forwardRef((props: ProjectSectionProps, ref: Ref<HTMLDivElement>) => {\n  return (\n      <Section ref={ref} style={{paddingTop: \"100px\"}} >\n        <SectionHeader title={props.projects.header} num=\"04.\" />\n        <ProjectScroller projects={props.projects.projectList} />\n      </Section>\n  )\n});","import React, { forwardRef, Ref } from \"react\";\nimport { Col, Divider, List, Rate, Row } from \"antd\";\nimport { Section, SectionHeader, StyledText } from \"../common\";\n\ntype SkillsSectionProps = {\n  skills: {\n    header: string,\n    ratingInfo: string,\n  },\n  ratings: {\n    [key: string]: {\n      [key: string]: number\n    }\n  },\n};\n\nexport const SkillsSection = forwardRef((props: SkillsSectionProps, ref: Ref<HTMLDivElement>) => {\n  return (\n    <Section ref={ref} style={{paddingTop: \"100px\"}} >\n      <SectionHeader title={props.skills.header} num=\"03.\" />\n      {\n        Object.entries(props.ratings).map( ([skillGroup, groupRatings]) =>\n          <div key={skillGroup}>\n            <Divider orientation=\"right\">{skillGroup}</Divider>\n            <List\n              dataSource={Object.entries(groupRatings)}\n              grid={{ gutter: 16, xs: 1, sm: 1, md: 2, lg: 3, xl: 3, xxl: 8 }}\n              renderItem={ ([ name, rating ]) => (\n                <List.Item><Col>\n                  <Row><StyledText style={{ fontSize: \"14px\" }}>{name}</StyledText></Row>\n                  <Row><Rate disabled defaultValue={rating} /></Row>\n                </Col></List.Item>\n              )}\n            />\n          </div>\n        )\n      }\n    </Section>\n  );\n});","import React, { forwardRef, Ref } from \"react\";\nimport { Row, Typography } from \"antd\";\nimport { colors, StyledParagraph, StyledTitle } from \"../common\";\n\ntype WelcomeSectionProps = {\n  welcome: {\n    greeting: string,\n    name: string,\n    statement: string,\n    summary: string,\n  }\n}\n\nexport const WelcomeSection = forwardRef((props: WelcomeSectionProps, ref: Ref<HTMLDivElement>) => {\n  return (\n    <div ref={ref} style={{\"paddingTop\": \"175px\"}}>\n      <Row>\n        <Typography.Text\n          style={{fontFamily: \"'Roboto Mono'\", fontSize: \"18px\", color: colors.highlight}}\n        >\n          {props.welcome.greeting}\n        </Typography.Text>\n      </Row>\n      <Row>\n        <StyledTitle style={{\"marginBottom\": \"10px\"}}>{props.welcome.name}</StyledTitle>\n      </Row>\n      <Row>\n        <StyledTitle style={{color: colors.secondary}}>{props.welcome.statement}</StyledTitle>\n      </Row>\n      <Row style={{width: \"50%\"}}>\n        <StyledParagraph style={{marginTop: \"10px\"}}>{props.welcome.summary}</StyledParagraph>\n      </Row>\n    </div>\n  );\n});","import React, { FC } from \"react\";\nimport { Menu } from \"antd\";\nimport { HomeOutlined } from \"@ant-design/icons\";\n\ntype SiteMenuProps = {\n  links: {title: string, link: string}[],\n  onSectionClick: (_: { item?: any, key: any, keyPath?: any, domEvent?: any }) => void,\n};\n\nexport const SiteMenu: FC<SiteMenuProps> = (props) => {\n  return (\n    <Menu\n      mode=\"horizontal\"\n      onClick={props.onSectionClick}\n      selectable={false}\n      style={{fontFamily: \"'Roboto'\"}}\n    >\n      <Menu.Item key=\"#welcome\" icon={ <HomeOutlined /> } >\n        Jeremy Swerdlow | Software Engineer\n      </Menu.Item>\n      {\n        props.links.reverse().map(({title, link}) => {\n          return (\n            <Menu.Item key={link} style={{float: 'right'}} >\n              {title}\n            </Menu.Item>\n          )\n        })\n      }\n    </Menu>\n  );\n};","import React, { FC, createRef, RefObject } from 'react';\nimport { Layout } from 'antd';\nimport {\n  contacts,\n  links,\n  welcome,\n  about,\n  experience,\n  ratings,\n  skills,\n  projects\n} from './common';\nimport { ContactSidebar } from './ContactSidebar';\nimport {\n  AboutSection,\n  ContactSection,\n  ExperienceSection,\n  ProjectSection,\n  SkillsSection,\n  WelcomeSection,\n} from './sections';\nimport { SiteMenu } from './SiteMenu';\n\nconst App: FC = () => {\n\n  const sectionList = links.map(({title, link}) => link);\n  sectionList.push(\"#welcome\");\n  const sectionReducer = (\n    accumulator: {[key: string]: RefObject<HTMLDivElement>}, val: string\n  ) => {\n    accumulator[val] = createRef<HTMLDivElement>()\n    return accumulator\n  };\n  const sectionRefMap = sectionList.reduce(sectionReducer, {});\n\n  const scrollIntoView = (obj: {key: string}) => {\n    sectionRefMap[obj.key]!.current?.scrollIntoView({behavior: \"smooth\"});\n  }\n\n  return (\n    <Layout>\n      <Layout.Header style={{padding: \"0px\", position: \"fixed\", width: \"100%\", zIndex: 100}} >\n        <SiteMenu links={links} onSectionClick={scrollIntoView}/>\n      </Layout.Header>\n      <Layout>\n        <ContactSidebar contacts={contacts.list} />\n        <Layout.Content style={{margin: \"0px 125px 50px 125px\", alignItems: \"end\"}} >\n          <WelcomeSection welcome={welcome} ref={sectionRefMap[\"#welcome\"]}/>\n          <AboutSection about={about} ref={sectionRefMap[\"#about\"]}/>\n          <ExperienceSection experience={experience} ref={sectionRefMap[\"#jobs\"]}/>\n          <SkillsSection skills={skills} ratings={ratings} ref={sectionRefMap[\"#skills\"]}/>\n          <ProjectSection projects={projects} ref={sectionRefMap[\"#projects\"]} />\n          <ContactSection contacts={contacts} ref={sectionRefMap[\"#contact\"]}/>\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport 'antd/dist/antd.dark.css';\nimport 'fontsource-roboto';\nimport \"fontsource-roboto-mono\";\n\nimport App from './App';\nimport { NotFoundPage } from './NotFoundPage';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/about\">\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"*\" component={NotFoundPage} />\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import React, { FC } from \"react\";\nimport { WarningOutlined } from \"@ant-design/icons\";\nimport {\n  ClearTextButton,\n  colors,\n  Section,\n  SectionHeader,\n  StyledParagraph\n} from \"./common\";\n\ntype NotFoundPageProps = {\n\n}\n\nexport const NotFoundPage: FC<NotFoundPageProps> = (props) => {\n  return (\n    <Section style={{paddingTop: \"100px\", width: \"60%\", marginTop: \"0px\"}}>\n      <SectionHeader title=\"Uh Oh!\" num=\"404.\" />\n      <div style={{textAlign: \"center\", fontSize: \"128px\"}} >\n        <WarningOutlined style={{color: colors.secondary}} />\n      </div>\n      <StyledParagraph style={{textAlign: \"center\"}} >\n        Seems you've stumbled somewhere you weren't supposed to!\n      </StyledParagraph>\n      <div style={{marginTop: \"75px\", display: \"flex\", justifyContent: \"center\"}}>\n        <ClearTextButton href=\"/\">\n          This button will take you back to where you should be.\n        </ClearTextButton>\n      </div>\n    </Section>\n  );\n};"],"sourceRoot":""}