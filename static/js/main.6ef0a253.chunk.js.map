{"version":3,"sources":["constants/Content.tsx","constants/Colors.tsx","constants/Ratings.tsx","common/InfoBox.tsx","common/Paragraph.tsx","common/Section.tsx","AboutMe.tsx","Introduction.tsx","experience/ExperienceModal.tsx","experience/WorkExperience.tsx","skills/Skills.tsx","portfolio/Badge.tsx","portfolio/ProjectModal.tsx","portfolio/Portfolio.tsx","Contact.tsx","SiteMenu.tsx","App.tsx","index.tsx"],"names":["ProjectStatus","colors","welcome","greeting","name","statement","summary","about","header","paragraphs","recentSkills","skills","experience","jobs","company","companyLink","title","location","start","end","points","icon","ratings","C","Golang","Groovy","Haskell","Java","JavaScript","Python","Ruby","Scala","Shell","TypeScript","Frameworks","Guice","Pytest","React","Spring","Tools","Ansible","Chef","Docker","Jenkins","MySQL","PostgreSQL","Terraform","Tomcat","Libraries","Flask","Pandas","XGBoost","Concepts","Containerization","projects","buttonText","projectList","link","image","status","stable","notStarted","contacts","subheader","list","text","key","StyledBox","styled","div","InfoBox","props","fontSize","style","paddingRight","alignSelf","children","Paragraph","StyledSection","StyledDivider","h2","StyledSectionNumber","span","StyledSectionTitle","StyledSectionBody","Section","sectionId","AboutBody","AboutParagraph","StyledSkillList","StyledSkillListItem","StyledListIcon","FaAngleRight","AboutMe","forwardRef","ref","width","margin","map","paragraph","skill","IntroBody","IntroGreeting","IntroName","h1","IntroStatement","IntroSummary","Introduction","ModalHeader","ModalSubHeader","h3","ModalCloseButton","FaTimes","CompanyLink","a","CompanyLocation","ExperienceModal","isOpen","modalVisible","onRequestClose","onModalClose","closeTimeoutMS","overlay","zIndex","backdropFilter","backgroundColor","content","fontFamily","color","borderColor","onClick","height","userSelect","job","href","target","point","lineHeight","paddingTop","display","flexDirection","WorkBody","WorkSection","JobLocation","JobTitle","className","WorkExperience","useState","setModalVisible","modalJob","setModalJob","marginBottom","layout","contentStyle","background","boxShadow","cursor","contentArrowStyle","borderRight","date","iconStyle","onTimelineElementClick","onTimelineClick","SkillBody","SkillSection","SkillGroupSection","StyledReactTable","ReactTable","SkillScoring","textAlign","initialRating","rating","readonly","quiet","fullSymbol","emptySymbol","Skills","Object","entries","group","scores","TheadComponent","TrGroupComponent","justifyContent","border","defaultPageSize","length","sortable","showPagination","data","columns","accessor","Cell","value","BadgeTypes","label","marginRight","inProgress","blocked","BadgeCard","Badge","textTransform","ModalHeaderIcon","RepoLink","button","ProjectModal","project","position","marginTop","window","open","PortfolioBody","PortfolioSection","PortfolioCard","Portfolio","modalProject","setModalProject","flexWrap","onProjectClicked","alignItems","paddingLeft","ContactBody","ContactSection","ContactHeader","ContactParagraph","p","ContactRow","Contact","contact","paddingSides","StyledMenuBar","SiteMenu","slice","reverse","AppBody","LinkButton","UpArrowButton","showUpArrow","App","setShowUpArrow","useEffect","addEventListener","pageYOffset","passive","scrollTo","current","scrollIntoView","behavior","introRef","createRef","aboutRef","experienceRef","skillRef","portfolioRef","contactRef","links","id","padding","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ef0a253.chunk.js","sourcesContent":["// TODO: Revamp/update content for current/ongoing project statuses, updated metrics, etc.\n\nimport React from \"react\";\nimport {\n  FaAssistiveListeningSystems,\n  FaClock,\n  FaCodeBranch,\n  FaDog,\n  FaDollarSign,\n  FaGamepad,\n  FaGithubAlt,\n  FaGraduationCap,\n  FaLaptopCode,\n  FaLaptopMedical,\n  FaLinkedinIn,\n  FaMicroscope,\n  FaMobile,\n  FaMusic,\n  FaPaperPlane,\n  FaRandom,\n  FaUserCircle,\n} from \"react-icons/fa\";\n\nimport { ratings } from \"./Ratings\";\n\nexport enum ProjectStatus {\n  notStarted = \"default\",\n  inProgress = \"processing\",\n  stable = \"success\",\n  blocked = \"warning\",\n}\n\nexport const welcome = {\n  greeting: \"Hey, my name's\",\n  name: \"Jeremy Swerdlow.\",\n  statement: \"I deliver scalable, robust services.\",\n  summary:\n    \"I'm a software engineer based out of Los Angeles, CA with experience \" +\n    \"designing and implementing backend solutions built on serverless architecture \" +\n    \"to provide customers with the content they want, when they want it.\",\n};\n\nexport const about = {\n  header: \"About Me\",\n  paragraphs: [\n    \"Hi! I'm Jeremy. I'm a software engineer working at Amazon Music in Los Angeles, \" +\n      \"California. I enjoy creating and innovating backends people can rely on.\",\n    \"In any situation, I aim to deliver a product and level of service my customers \" +\n      \"can rely on that can be supported and expanded by others as well.\",\n    \"After graduating Earlham College in 2018, I joined Bloomberg LP's engineering \" +\n      \"team in NYC, first providing machine learning models to enrich legal documents, \" +\n      \"then designing and implementing a scalable framework for testing code \" +\n      \"involving containerization in continuous integration within an isolated \" +\n      \"environment.\",\n    \"More recently I have joined Amazon Music's development team, helping to work on \" +\n      \"ways for artists to connect with their fans.\",\n  ],\n  recentSkills: {\n    summary: \"Here are some of the technologies I've used the most lately:\",\n    skills: [\n      \"AWS Suite\",\n      \"Java 8\",\n      \"Guice\",\n      \"Python 3\",\n      \"React\",\n      \"TypeScript\",\n      \"Cloud Development Kit (CDK)\",\n    ],\n  },\n};\n\nexport const experience = {\n  header: \"Experience\",\n  summary:\n    \"Below is a summary of experiences which have shaped who I am as an individual \" +\n    \"and an engineer. It covers work, education, research, and things in between. \" +\n    \"To see more complete information on any experience, please click on it.\",\n  jobs: [\n    {\n      company: \"Amazon Music For Artists\",\n      companyLink: \"https://artists.amazonmusic.com/\",\n      title: \"Software Development Engineer\",\n      location: \"Los Angeles, California\",\n      start: \"Jul 2020\",\n      end: \"Present\",\n      points: [\n        \"Provide more than 50,000 artists and labels with information and tools to \" +\n          \"connect with fans based in a cross-platform application supported by a \" +\n          \"serverless backend built with Amazon Web Services's API Gateway, Elastic \" +\n          \"Container Service, and Lambda with DynamoDB, being monitored using \" +\n          \"CloudWatch.\",\n        \"Notify over 55,000,000 fans when their favorite artists are livestreaming by \" +\n          \"allowing musicians to link their Twitch accounts to their Amazon Music \" +\n          \"profiles.\",\n      ],\n      icon: <FaMusic />,\n    },\n    {\n      company: \"Bloomberg LP\",\n      companyLink: \"https://www.bloomberg.com/company\",\n      title: \"Software Engineer\",\n      location: \"New York, New York\",\n      start: \"Sep 2018\",\n      end: \"Jul 2020\",\n      points: [\n        \"Orchestrated machine allocation and state for more than 10,000 builds daily \" +\n          \"across hundreds of Jenkins instances with a stateless, distributed service \" +\n          \"written in Python, Java and Go using Apache Kafka for queueing.\",\n        \"Led design and development of a testing framekwork to simplify and optimize \" +\n          \"user onboarding for container-driven testing with Docker and Docker \" +\n          \"Compose in an ephemeral, isolated environment allowing for meaningful \" +\n          \"performance metrics in addition to testing success.\",\n        \"Wrapped access to document enriching services in an API built with Java Spring \" +\n          \"for use in an ingestion workflow processing more than a hundred thousand \" +\n          \"documents daily and in a batch job marking up historic records.\",\n      ],\n      icon: <FaDollarSign />,\n    },\n    {\n      company: \"Icelandic Field Studies, Earlham College\",\n      companyLink:\n        \"https://fieldscience.cs.earlham.edu/index.php/icelandic-field-studies/\",\n      title: \"Researcher\",\n      location: \"Multiple Locations\",\n      start: \"Aug 2017\",\n      end: \"Jun 2018\",\n      points: [\n        \"Ingested, transformed and enriched readings from a LiDAR sensor attached to \" +\n          \"a UAV over network ports on a BeagleBoard, preparing for the generation \" +\n          \"of point clouds. These generated clouds were used to track volumetric \" +\n          \"changes and identify specific structures such as ground nests and \" +\n          \"archaeologically significant Viking settlements.\",\n        \"Tracked the impact of climate change YoY on the size of Iceland's \" +\n          \"Sólheimajökull glacier.\",\n        \"Generated three-dimensional representations of spaces using stitched images \" +\n          \"from a UAV.\",\n        \"Calculated and offset the carbon footprint of the research's travel, \" +\n          \"housing, and computation to have a net-neutral impact.\",\n      ],\n      icon: <FaMicroscope />,\n    },\n    {\n      company: \"Earlham College\",\n      companyLink: \"https://www.earlham.edu\",\n      title: \"Bachelor of Arts in Computer Science\",\n      location: \"Richmond, Indiana\",\n      start: \"Aug 2014\",\n      end: \"May 2018\",\n      points: [\n        \"GPA (Major) - 3.76 (3.91)\",\n        \"Collegiate Honor's\",\n        \"Dean's List\",\n        \"Student Researcher\",\n        \"Work Study Recipient\",\n      ],\n      icon: <FaGraduationCap />,\n    },\n    {\n      company: \"CoverMyMeds\",\n      companyLink: \"https://www.covermymeds.com/main\",\n      title: \"Data Science Intern\",\n      location: \"Columbus, Ohio\",\n      start: \"May 2017\",\n      end: \"Aug 2017\",\n      points: [\n        \"Increased the F1-score of a random forest decision tree generated from more \" +\n          \"than 300,000,000 data points with Python’s XGBoost library by more than 2%.\",\n        \"Extended the Bokeh Python library to build a containerized standalone GUI for \" +\n          \"business analysts to make informed decisions about client impact when \" +\n          \"adjusting the confidence levels of our model.\",\n      ],\n      icon: <FaLaptopMedical />,\n    },\n    {\n      company: \"Clio Muse Tours\",\n      companyLink: \"https://cliomusetours.com\",\n      title: \"Intern\",\n      location: \"Athens, Greece\",\n      start: \"Feb 2017\",\n      end: \"Apr 2017\",\n      points: [\n        \"Gathered, cleaned, categorized, and presented data to the company’s business \" +\n          \"analysts on potential expansion locations for tours across Europe and North \" +\n          \"America as part of an effort to provide global service via their app.\",\n      ],\n      icon: <FaAssistiveListeningSystems />,\n    },\n    {\n      company: \"Idexx Laboratories\",\n      companyLink: \"https://www.idexx.com\",\n      title: \"SAP Development Intern\",\n      location: \"Portland, Maine\",\n      start: \"May 2016\",\n      end: \"Jul 2016\",\n      points: [\n        \"Modernized an internal enterprise resource planning tool using \" +\n          \"SAPUI5, an XML with JavaScript controller to offer improved performance and \" +\n          \"cross platform usability.\",\n      ],\n      icon: <FaDog />,\n    },\n  ],\n};\n\nexport const skills = {\n  header: \"Skills\",\n  summary:\n    \"Below is a scoring of different skills and ideas I have picked up as \" +\n    \"part of my career trajectory. Each one is graded on a scale from 1 to 5, where 1 \" +\n    \"indicates a basic knowledge, and 5 indicates thorough proficiency. These are \" +\n    \"grouped by similarity and labelled accordingly in an effort to provide some \" +\n    \"organization.\",\n  ratings: ratings,\n};\n\nexport const projects = {\n  header: \"Portfolio\",\n  buttonText: \"Check out details of the project by clicking here\",\n  projectList: [\n    {\n      title: \"Grook\",\n      summary:\n        \"Grook is a Turing complete (TC) language meant to be a parody of the \" +\n        \"Ook programming language, but instead of it being so easy a monkey could \" +\n        \"write it, it's so that a Groot can.\",\n      link: \"https://github.com/jeremyswerdlow/grook\",\n      image: <FaCodeBranch />,\n      status: ProjectStatus.stable,\n    },\n    {\n      title: \"Dynamic Decision Trees\",\n      summary:\n        \"Decision Trees are an easily understood machine learning algorithm \" +\n        \"based on splitting data depending on a calculated value at each level of the \" +\n        \"tree, such that the data grouped by the split is most similar. This allows \" +\n        \"for then using the model to predict the outcome of a similarly formatted \" +\n        \"occurrence of data. This project extends the functionality of these trees, \" +\n        \"allowing for new data to be added even after the initial training of the tree \" +\n        \"has completed. By doing this, the costly operation of training does not \" +\n        \"reoccur, but instead is delayed while still benefitting from newer data.\",\n      link: \"https://github.com/jeremyswerdlow/Dynamic-Decision-Trees\",\n      image: <FaLaptopCode />,\n      status: ProjectStatus.stable,\n    },\n    {\n      title: \"Personal Website\",\n      summary:\n        \"This website was built after starting a new position which involved \" +\n        \"more front end development than I had done in previous experiences. It is \" +\n        \"written in Typescript with React and the Ant Design framework.\",\n      link: \"https://github.com/jeremyswerdlow/about\",\n      image: <FaUserCircle />,\n      status: ProjectStatus.stable,\n    },\n    {\n      title: \"Isolation Clock\",\n      summary:\n        \"This was a way to track when I'd interacted with people during Covid. \" +\n        \"It uses Docker to run a PostgreSQL database for storing the data, with Python \" +\n        \"3 using Flask for the frontend API interactions. This does not provide any \" +\n        \"user interface, but instead makes use of Python's built in CLI tooling, \" +\n        \"argparse.\",\n      link: \"https://github.com/jeremyswerdlow/isolation-clock\",\n      image: <FaClock />,\n      status: ProjectStatus.notStarted,\n    },\n    {\n      title: \"Random Shuffle\",\n      summary:\n        \"Just a simple project I threw together to allow people to get a random \" +\n        \"permutation of a set of options that uses all the options. Useful for teams \" +\n        \"trying to decide an order, or shuffling a playlist of music, whatever you \" +\n        \"need. Written in Typescript with React and Material UI.\",\n      link: \"https://github.com/jeremyswerdlow/random-shuffle\",\n      image: <FaRandom />,\n      status: ProjectStatus.stable,\n    },\n    {\n      title: \"OSRS Skills Dashboard\",\n      summary:\n        \"Old School Runescape is an MMORPG meant to capture the nostalgia of \" +\n        \"the Runescape prior to its Evolution of Combat transformation. While this \" +\n        \"provides an enjoyable and fun reminder of a game I love, its website leaves \" +\n        \"much to be desired in terms of tracking your progress towards goals. This \" +\n        \"site provides a more modern delivery of the skills tracked on the highscores \" +\n        \"not just for OSRS itself, but for private servers as well. It relies on React \" +\n        \"written in Typescript with Ant Design for its interface, while scraping data \" +\n        \"from the respective websites themselves with Axios and Cheerio.\",\n      link: \"https://github.com/jeremyswerdlow/rs-skills-dashboard\",\n      image: <FaGamepad />,\n      status: ProjectStatus.stable,\n    },\n  ],\n};\n\nexport const contacts = {\n  header: \"Contact\",\n  subheader: \"Say Hello!\",\n  summary:\n    \"I always love to hear from other people interested or involved in tech. Please \" +\n    \"make use of each of the below means of contact to reach out, whether it's just \" +\n    \"to ask a question or invite me to collaborate on a project. Thanks!\",\n  list: [\n    {\n      title: \"Email\",\n      icon: <FaPaperPlane />,\n      link: \"mailto:jeremyjswerdlow@gmail.com\",\n      text: \"jeremy.j.swerdlow@gmail.com\",\n      key: \"email\",\n    },\n    {\n      title: \"Phone\",\n      icon: <FaMobile />,\n      link: \"tel:+1-207-712-1044\",\n      text: \"207 712 1044\",\n      key: \"phone\",\n    },\n    {\n      title: \"LinkedIn\",\n      icon: <FaLinkedinIn />,\n      link: \"https://linkedin.com/in/jeremyswerdlow\",\n      text: \"/in/jeremyswerdlow\",\n      key: \"linkedin\",\n    },\n    {\n      title: \"GitHub\",\n      icon: <FaGithubAlt />,\n      link: \"https://github.com/jeremyswerdlow\",\n      text: \"github.com/jeremyswerdlow\",\n      key: \"github\",\n    },\n  ],\n};\n","export const colors = {\n  highlight: \"#EE7674\",\n  primary: \"#FFFFFF\",\n  secondary: \"#758ECD\",\n  background: \"#191923\",\n  accents: \"#C1CEFE\",\n  light: \"#A0DDFF\",\n};\n","export const ratings = {\n  \"Programming Languages\": {\n    C: 3,\n    \"C++\": 2,\n    Golang: 3,\n    Groovy: 4,\n    Haskell: 3,\n    Java: 5,\n    JavaScript: 3,\n    Python: 5,\n    Ruby: 3,\n    Scala: 2,\n    Shell: 2,\n    TypeScript: 4,\n  },\n  Frameworks: {\n    Guice: 3,\n    Pytest: 5,\n    React: 4,\n    Spring: 3,\n  },\n  Tools: {\n    Ansible: 3,\n    \"Apache Kafka\": 4,\n    Chef: 5,\n    Docker: 5,\n    \"Docker-Compose\": 5,\n    Jenkins: 5,\n    MySQL: 4,\n    PostgreSQL: 3,\n    Terraform: 4,\n    Tomcat: 2,\n  },\n  Libraries: {\n    Flask: 5,\n    Pandas: 4,\n    \"Scikit-learn\": 3,\n    XGBoost: 2,\n  },\n  Concepts: {\n    \"12 Factor App\": 3,\n    \"Agile Methodologies\": 5,\n    \"Configuration as code\": 3,\n    Containerization: 4,\n    \"Infrastructure as code\": 3,\n    \"Microservice Architecture\": 4,\n    \"Serverless Architecture\": 4,\n  },\n};\n","import styled from \"@emotion/styled\";\nimport React, { FC } from \"react\";\nimport { FaInfo } from \"react-icons/fa\";\nimport { colors } from \"../constants\";\n\ntype InfoBoxProps = {\n  icon?: JSX.Element;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst StyledBox = styled.div`\n  width: 90%;\n  margin: auto;\n  display: flex;\n  flex-direction: row;\n  padding: 25px;\n  border: 1.25px solid ${colors.accents};\n  border-radius: 5px;\n`;\n\nexport const InfoBox: FC<InfoBoxProps> = (props) => {\n  return (\n    <StyledBox {...props}>\n      {props.icon || (\n        <FaInfo\n          fontSize=\"40px\"\n          style={{ paddingRight: \"25px\", alignSelf: \"center\" }}\n        />\n      )}\n      {props.children}\n    </StyledBox>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nimport { colors } from \"../constants\";\n\nexport const Paragraph = styled.div`\n  color: ${colors.primary};\n  font-size: 16px;\n  line-height: 1.5;\n`;\n","import styled from \"@emotion/styled\";\nimport React, { FC } from \"react\";\n\nimport { colors } from \"../constants\";\n\ntype SectionProps = {\n  sectionId?: string;\n  header?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst StyledSection = styled.div`\n  height: 100%;\n  width: 100%;\n\n  font-family: Roboto;\n  background-color: transparent;\n\n  padding-bottom: 100px;\n`;\n\nconst StyledDivider = styled.h2`\n  display: flex;\n  flex-direction: row;\n  margin: auto;\n  padding: 25px 25px 0px 25px;\n  user-select: none;\n\n  ::before {\n    content: \"\";\n    flex: 1 1;\n    border-bottom: 1px solid ${colors.highlight};\n    margin: auto;\n  }\n\n  ::after {\n    content: \"\";\n    flex: 6 1;\n    border-bottom: 1px solid ${colors.highlight};\n    margin: auto;\n  }\n`;\n\nconst StyledSectionNumber = styled.span`\n  padding: 15px 0px 15px 15px;\n  font-family: Roboto Mono;\n  color: ${colors.highlight};\n`;\n\nconst StyledSectionTitle = styled.span`\n  padding: 15px 15px 15px 10px;\n\n  font-family: Roboto Mono;\n  text-transform: capitalize;\n  color: ${colors.primary};\n`;\n\nconst StyledSectionBody = styled.div`\n  padding: 0px 25px;\n  color: ${colors.accents};\n`;\n\nexport const Section: FC<SectionProps> = (props) => {\n  return (\n    <StyledSection {...props}>\n      <StyledDivider>\n        {props.sectionId && (\n          <StyledSectionNumber>{props.sectionId}</StyledSectionNumber>\n        )}\n        <StyledSectionTitle>{props.header}</StyledSectionTitle>\n      </StyledDivider>\n      <StyledSectionBody>{props.children}</StyledSectionBody>\n    </StyledSection>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport React, { forwardRef, Ref } from \"react\";\nimport { FaAngleRight } from \"react-icons/fa\";\n\nimport { Paragraph, Section } from \"./common\";\nimport { about, colors } from \"./constants\";\n\nconst AboutBody = styled.div``;\n\nconst AboutParagraph = styled(Paragraph)`\n  color: ${colors.accents};\n  user-select: none;\n  padding-bottom: 25px;\n`;\n\nconst StyledSkillList = styled.div`\n  columns: 3 auto;\n`;\n\nconst StyledSkillListItem = styled.div`\n  color: ${colors.primary};\n  font-family: Roboto Mono;\n  line-height: 1.6;\n  user-select: all;\n`;\n\nconst StyledListIcon = styled(FaAngleRight)`\n  position: relative;\n  top: 2px;\n\n  padding-right: 15px;\n\n  color: ${colors.highlight};\n`;\n\ntype AboutMeProps = {\n  sectionId: string;\n};\n\nexport const AboutMe = forwardRef(\n  (props: AboutMeProps, ref: Ref<HTMLDivElement>) => {\n    return (\n      <AboutBody ref={ref}>\n        <Section\n          sectionId={props.sectionId}\n          header={about.header}\n          style={{ width: \"70%\", margin: \"auto\" }}\n        >\n          {about.paragraphs.map((paragraph) => (\n            <AboutParagraph>{paragraph}</AboutParagraph>\n          ))}\n\n          <AboutParagraph>{about.recentSkills.summary}</AboutParagraph>\n\n          <StyledSkillList>\n            {about.recentSkills.skills.map((skill) => (\n              <StyledSkillListItem>\n                <StyledListIcon />\n                {skill}\n              </StyledSkillListItem>\n            ))}\n          </StyledSkillList>\n        </Section>\n      </AboutBody>\n    );\n  }\n);\n","import styled from \"@emotion/styled\";\nimport React, { forwardRef, Ref } from \"react\";\n\nimport { Paragraph } from \"./common\";\nimport { colors, welcome } from \"./constants\";\n\nconst IntroBody = styled.div`\n  width: 80%;\n  padding: 175px 125px 100px;\n  margin: auto;\n  font-family: Roboto, sans-serif;\n  user-select: none;\n`;\n\nconst IntroGreeting = styled.h2`\n  font-weight: normal;\n  color: ${colors.highlight};\n  font-family: Roboto Mono, monospace;\n  margin: 0px;\n`;\n\nconst IntroName = styled.h1`\n  color: ${colors.primary};\n  font-size: 64px;\n  margin: 0px;\n`;\n\nconst IntroStatement = styled.h1`\n  color: ${colors.accents};\n  font-size: 32px;\n  margin: 0px 0px 50px;\n`;\n\nconst IntroSummary = styled(Paragraph)`\n  color: ${colors.accents};\n  width: 50%;\n`;\n\nexport const Introduction = forwardRef((props, ref: Ref<HTMLDivElement>) => {\n  return (\n    <IntroBody ref={ref}>\n      <IntroGreeting>{welcome.greeting}</IntroGreeting>\n      <IntroName>{welcome.name}</IntroName>\n      <IntroStatement>{welcome.statement}</IntroStatement>\n      <IntroSummary>{welcome.summary}</IntroSummary>\n    </IntroBody>\n  );\n});\n","import styled from \"@emotion/styled\";\nimport React, { FC } from \"react\";\nimport { FaMinus, FaTimes } from \"react-icons/fa\";\nimport ReactModal from \"react-modal\";\n\nimport { colors } from \"../constants\";\n\nconst ModalHeader = styled.h1`\n  margin: 0px;\n  width: 100%;\n  color: ${colors.primary};\n  font-family: Roboto;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst ModalSubHeader = styled.h3`\n  margin: 0px 0px 10px 0px;\n  width: 100%;\n  color: ${colors.secondary};\n  font-family: Roboto;\n`;\n\nconst ModalCloseButton = styled(FaTimes)`\n  height: 35px;\n  width: 35px;\n  color: ${colors.primary};\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst CompanyLink = styled.a`\n  font-weight: bold;\n  text-decoration: none;\n  color: ${colors.secondary};\n`;\n\nconst CompanyLocation = styled.span`\n  font-weight: bold;\n  color: ${colors.primary};\n`;\n\ntype ExperienceModalProps = {\n  job: {\n    company: string;\n    companyLink: string;\n    title: string;\n    location: string;\n    start: string;\n    end: string;\n    points: string[];\n    icon: JSX.Element;\n  };\n  modalVisible: boolean;\n  onModalClose: () => void;\n};\n\nexport const ExperienceModal: FC<ExperienceModalProps> = (props) => {\n  return (\n    <ReactModal\n      isOpen={props.modalVisible}\n      onRequestClose={props.onModalClose}\n      closeTimeoutMS={1000}\n      style={{\n        overlay: {\n          zIndex: 5,\n          backdropFilter: \"blur(0.75em)\",\n          backgroundColor: \"rgba(0, 0, 0, 0.90)\",\n        },\n        content: {\n          fontFamily: \"Roboto\",\n          color: colors.primary,\n          borderColor: \"transparent\",\n          backgroundColor: \"transparent\",\n        },\n      }}\n    >\n      <div\n        onClick={props.onModalClose}\n        style={{\n          height: \"100%\",\n          width: \"100%\",\n          fontFamily: \"Roboto\",\n          userSelect: \"none\",\n        }}\n      >\n        <ModalHeader>\n          {props.job.title}\n          <ModalCloseButton onClick={props.onModalClose} />\n        </ModalHeader>\n        <ModalSubHeader>\n          <CompanyLink href={props.job.companyLink} target=\"_blank\">\n            {props.job.company}\n          </CompanyLink>\n          &#44;&nbsp;\n          <CompanyLocation>{props.job.location}</CompanyLocation>\n        </ModalSubHeader>\n        {props.job.points.map((point) => (\n          <div\n            style={{\n              lineHeight: \"1.2\",\n              margin: \"auto\",\n              width: \"90%\",\n              paddingTop: \"25px\",\n              fontSize: \"18px\",\n              display: \"flex\",\n              flexDirection: \"row\",\n            }}\n          >\n            <div style={{ paddingRight: \"25px\" }}>\n              <FaMinus fontSize=\"12px\" />\n            </div>\n            {point}\n          </div>\n        ))}\n      </div>\n    </ReactModal>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport React, { FC, forwardRef, Ref, useState } from \"react\";\nimport {\n  VerticalTimeline,\n  VerticalTimelineElement,\n} from \"react-vertical-timeline-component\";\nimport \"react-vertical-timeline-component/style.min.css\";\n\nimport { InfoBox, Section } from \"../common\";\nimport { colors, experience } from \"../constants\";\nimport { ExperienceModal } from \"./ExperienceModal\";\n\nconst WorkBody = styled.div``;\n\nconst WorkSection = styled(Section)`\n  width: 80%;\n  overflow-x: hidden;\n  margin: auto;\n`;\n\nconst JobLocation = styled.span`\n  font-weight: bold;\n`;\n\nconst JobTitle: FC<{\n  job: {\n    company: string;\n    companyLink: string;\n    title: string;\n    location: string;\n    start: string;\n    end: string;\n    points: string[];\n    icon: JSX.Element;\n  };\n}> = (props) => {\n  return (\n    <h3\n      className=\"vertical-timeline-element-title\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n      }}\n    >\n      {props.job.title}&nbsp;&#x40;&nbsp;\n      <span style={{ color: colors.highlight }}>{props.job.company}</span>\n    </h3>\n  );\n};\n\ntype WorkExperienceProps = {\n  sectionId: string;\n};\n\nexport const WorkExperience = forwardRef(\n  (props: WorkExperienceProps, ref: Ref<HTMLDivElement>) => {\n    const [modalVisible, setModalVisible] = useState<boolean>(false);\n    const [modalJob, setModalJob] = useState<{\n      company: string;\n      companyLink: string;\n      title: string;\n      location: string;\n      start: string;\n      end: string;\n      points: string[];\n      icon: JSX.Element;\n    }>(experience.jobs[0]);\n\n    const onTimelineClick = (job: {\n      company: string;\n      companyLink: string;\n      title: string;\n      location: string;\n      start: string;\n      end: string;\n      points: string[];\n      icon: JSX.Element;\n    }) => {\n      setModalJob(job);\n      setModalVisible(true);\n    };\n\n    const onCloseModal = () => {\n      setModalVisible(false);\n    };\n\n    return (\n      <WorkBody ref={ref}>\n        <WorkSection sectionId={props.sectionId} header={experience.header}>\n          <ExperienceModal\n            job={modalJob}\n            modalVisible={modalVisible}\n            onModalClose={onCloseModal}\n          />\n          <InfoBox style={{ marginBottom: \"25px\" }}>\n            {experience.summary}\n          </InfoBox>\n          <VerticalTimeline layout=\"1-column\">\n            {experience.jobs.map((job) => (\n              <VerticalTimelineElement\n                contentStyle={{\n                  background: colors.primary,\n                  color: colors.background,\n                  boxShadow: \"none\",\n                  userSelect: \"none\",\n                  cursor: \"pointer\",\n                }}\n                contentArrowStyle={{\n                  borderRight: `7px solid ${colors.primary}`,\n                }}\n                date={`${job.start} - ${job.end}`}\n                iconStyle={{\n                  backgroundColor: colors.highlight,\n                  color: colors.primary,\n                }}\n                icon={job.icon}\n                onTimelineElementClick={() => onTimelineClick(job)}\n              >\n                <JobTitle job={job} />\n                <div className=\"vertical-timeline-element-subtitle\">\n                  <JobLocation>{job.location}</JobLocation>\n                </div>\n              </VerticalTimelineElement>\n            ))}\n          </VerticalTimeline>\n        </WorkSection>\n      </WorkBody>\n    );\n  }\n);\n","import styled from \"@emotion/styled\";\nimport React, { FC, forwardRef, Ref } from \"react\";\nimport { FaStar } from \"react-icons/fa\";\nimport Rating from \"react-rating\";\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\n\nimport { InfoBox, Section } from \"../common\";\nimport { colors, skills } from \"../constants\";\n\nconst SkillBody = styled.div``;\n\nconst SkillSection = styled(Section)`\n  width: 75%;\n  margin: auto;\n`;\n\nconst SkillGroupSection = styled(Section)`\n  font-family: Roboto Mono;\n  width: 100%;\n  max-width: 1575px;\n  margin: auto;\n  padding-bottom: 0px;\n`;\n\nconst StyledReactTable = styled(ReactTable)``;\n\ntype SkillScoringProps = {\n  rating: number;\n};\n\nconst SkillScoring: FC<SkillScoringProps> = (props) => {\n  return (\n    <div style={{ width: \"100%\", textAlign: \"right\" }}>\n      <Rating\n        initialRating={props.rating}\n        readonly\n        quiet\n        fullSymbol={\n          <FaStar style={{ color: colors.highlight, margin: \"5px\" }} />\n        }\n        emptySymbol={\n          <FaStar style={{ color: colors.secondary, margin: \"5px\" }} />\n        }\n      />\n    </div>\n  );\n};\n\ntype SkillsProps = {\n  sectionId: string;\n};\n\nexport const Skills = forwardRef(\n  (props: SkillsProps, ref: Ref<HTMLDivElement>) => {\n    return (\n      <SkillBody ref={ref}>\n        <SkillSection sectionId={props.sectionId} header={skills.header}>\n          <InfoBox>{skills.summary}</InfoBox>\n          {Object.entries(skills.ratings).map(([group, scores]) => {\n            return (\n              <SkillGroupSection header={group}>\n                <StyledReactTable\n                  TheadComponent={() => <></>}\n                  TrGroupComponent={(props) => (\n                    <div\n                      style={{\n                        width: \"100%\",\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                      }}\n                    >\n                      {props.children}\n                    </div>\n                  )}\n                  style={{ border: \"none\" }}\n                  defaultPageSize={Object.entries(scores).length}\n                  sortable={false}\n                  showPagination={false}\n                  data={Object.entries(scores).map(([name, rating]) => {\n                    return {\n                      name: name,\n                      rating: rating,\n                    };\n                  })}\n                  columns={[\n                    {\n                      accessor: \"name\",\n                      Cell: (props) => (\n                        <div style={{ userSelect: \"all\" }}>{props.value}</div>\n                      ),\n                    },\n                    {\n                      accessor: \"rating\",\n                      Cell: (props) => <SkillScoring rating={props.value} />,\n                    },\n                  ]}\n                />\n              </SkillGroupSection>\n            );\n          })}\n        </SkillSection>\n      </SkillBody>\n    );\n  }\n);\n","import styled from \"@emotion/styled\";\nimport React, { FC } from \"react\";\nimport {\n  FaCheckCircle,\n  FaExclamationCircle,\n  FaMinusCircle,\n  FaTimesCircle,\n} from \"react-icons/fa\";\nimport { colors, ProjectStatus } from \"../constants\";\n\nconst BadgeTypes = {\n  [ProjectStatus.stable]: {\n    color: colors.primary,\n    backgroundColor: \"rgba(0, 134, 11, 1)\",\n    label: \"stable\",\n    icon: <FaCheckCircle style={{ marginRight: \"5px\" }} />,\n  },\n  [ProjectStatus.inProgress]: {\n    color: colors.background,\n    backgroundColor: \"rgba(255, 230, 0, 1)\",\n    label: \"in progress\",\n    icon: <FaExclamationCircle style={{ marginRight: \"5px\" }} />,\n  },\n  [ProjectStatus.notStarted]: {\n    color: colors.primary,\n    backgroundColor: \"rgba(95, 0, 173, 1)\",\n    label: \"being designed\",\n    icon: <FaMinusCircle style={{ marginRight: \"5px\" }} />,\n  },\n  [ProjectStatus.blocked]: {\n    color: colors.primary,\n    backgroundColor: \"rgba(221, 18, 0, 1)\",\n    label: \"blocked\",\n    icon: <FaTimesCircle style={{ marginRight: \"5px\" }} />,\n  },\n};\n\nconst BadgeCard = styled.div`\n  height: 16px;\n  border-radius: 5px;\n  padding: 3px 5px;\n\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n\n  font-size: 12px;\n  user-select: none;\n`;\n\ntype BadgeProps = {\n  status: ProjectStatus;\n};\n\nexport const Badge: FC<BadgeProps> = ({ status }) => {\n  const { color, backgroundColor, label, icon } = BadgeTypes[status];\n\n  return (\n    <BadgeCard style={{ color, backgroundColor }}>\n      {icon}\n      <span style={{ textTransform: \"uppercase\" }}>{label}</span>\n    </BadgeCard>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport React, { FC } from \"react\";\nimport { FaGithubAlt, FaTimes } from \"react-icons/fa\";\nimport ReactModal from \"react-modal\";\n\nimport { colors, projects, ProjectStatus } from \"../constants\";\nimport { Badge } from \"./Badge\";\n\nconst ModalHeader = styled.h1`\n  margin: 0px;\n  width: 100%;\n  color: ${colors.primary};\n  font-family: Roboto;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst ModalHeaderIcon = styled.span`\n  font-size: 50px;\n  margin: 0px 25px;\n  padding-top: 15px;\n  color: ${colors.secondary};\n`;\n\nconst ModalCloseButton = styled(FaTimes)`\n  margin-left: auto;\n  height: 35px;\n  width: 35px;\n  color: ${colors.primary};\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst RepoLink = styled.button`\n  margin: auto;\n  position: absolute;\n  bottom: 0;\n\n  width: 55%;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1.5px solid ${colors.secondary};\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n\n  font-family: Roboto;\n  font-size: 18px;\n  font-weight: bold;\n  color: ${colors.secondary};\n  background-color: transparent;\n\n  transition: 0.75s ease;\n  :hover {\n    cursor: pointer;\n    color: rgba(89, 113, 173, 0.7);\n    border-color: rgba(89, 113, 173, 0.7);\n    background-color: rgba(58, 58, 82, 0.2);\n  }\n`;\n\ntype ProjectModalProps = {\n  project: {\n    title: string;\n    summary: string;\n    link: string;\n    image: JSX.Element;\n    status: ProjectStatus;\n  };\n  modalVisible: boolean;\n  onModalClose: () => void;\n};\n\nexport const ProjectModal: FC<ProjectModalProps> = (props) => {\n  return (\n    <ReactModal\n      isOpen={props.modalVisible}\n      onRequestClose={props.onModalClose}\n      closeTimeoutMS={1000}\n      style={{\n        overlay: {\n          zIndex: 5,\n          backdropFilter: \"blur(0.75em)\",\n          backgroundColor: \"rgba(0, 0, 0, 0.90)\",\n        },\n        content: {\n          fontFamily: \"Roboto\",\n          color: colors.primary,\n          borderColor: \"transparent\",\n          backgroundColor: \"transparent\",\n        },\n      }}\n    >\n      <div\n        onClick={props.onModalClose}\n        style={{\n          height: \"100%\",\n          width: \"100%\",\n          fontFamily: \"Roboto\",\n          userSelect: \"none\",\n        }}\n      >\n        <ModalHeader style={{ marginBottom: \"0px\" }}>\n          <ModalHeaderIcon>{props.project.image}</ModalHeaderIcon>\n          {props.project.title}\n          <ModalCloseButton onClick={props.onModalClose} />\n        </ModalHeader>\n        <div\n          style={{\n            lineHeight: \"1.6\",\n            margin: \"auto\",\n            width: \"80%\",\n            height: \"80%\",\n            fontSize: \"18px\",\n            position: \"relative\",\n          }}\n        >\n          <Badge status={props.project.status} />\n          <div style={{ marginTop: \"10px\" }}>{props.project.summary}</div>\n          <RepoLink onClick={() => window.open(props.project.link, \"_blank\")}>\n            <FaGithubAlt style={{ paddingRight: \"10px\" }} />\n            {projects.buttonText}\n          </RepoLink>\n        </div>\n      </div>\n    </ReactModal>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport React, { forwardRef, Ref, useState } from \"react\";\n\nimport { Section } from \"../common\";\nimport { colors, projects, ProjectStatus } from \"../constants\";\nimport { Badge } from \"./Badge\";\nimport { ProjectModal } from \"./ProjectModal\";\n\nconst PortfolioBody = styled.div``;\n\nconst PortfolioSection = styled(Section)`\n  width: 70%;\n  margin: auto;\n`;\n\nconst PortfolioCard = styled.div`\n  width: 90%;\n  border-radius: 5px;\n  padding: 15px;\n  margin: auto;\n  margin-bottom: 25px;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  color: ${colors.background};\n  border: 1.5px solid transparent;\n  background-color: ${colors.primary};\n  box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.2);\n\n  cursor: pointer;\n  user-select: none;\n\n  transition: 1s ease;\n  :hover {\n    background-color: rgba(58, 58, 82, 0.7);\n    color: ${colors.secondary};\n    border-color: ${colors.secondary};\n  }\n`;\n\ntype PortfolioProps = {\n  sectionId: string;\n};\n\nexport const Portfolio = forwardRef(\n  (props: PortfolioProps, ref: Ref<HTMLDivElement>) => {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [modalProject, setModalProject] = useState(projects.projectList[0]);\n\n    const onModalClose = () => {\n      setModalVisible(false);\n    };\n\n    const onProjectClicked = (project: {\n      title: string;\n      summary: string;\n      link: string;\n      image: JSX.Element;\n      status: ProjectStatus;\n    }) => {\n      setModalProject(project);\n      setModalVisible(true);\n    };\n\n    return (\n      <PortfolioBody ref={ref}>\n        <PortfolioSection sectionId={props.sectionId} header={projects.header}>\n          <ProjectModal\n            modalVisible={modalVisible}\n            project={modalProject}\n            onModalClose={onModalClose}\n          />\n          <div\n            style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\" }}\n          >\n            {projects.projectList.map((project) => (\n              <PortfolioCard onClick={() => onProjectClicked(project)}>\n                <div\n                  style={{\n                    width: \"100%\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <div\n                    style={{\n                      fontSize: \"20px\",\n                      alignItems: \"center\",\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                    }}\n                  >\n                    {project.image}\n                    <span\n                      style={{\n                        margin: \"0px\",\n                        paddingLeft: \"10px\",\n                        fontSize: \"16px\",\n                      }}\n                    >\n                      {project.title}\n                    </span>\n                  </div>\n                  <Badge status={project.status} />\n                </div>\n              </PortfolioCard>\n            ))}\n          </div>\n        </PortfolioSection>\n      </PortfolioBody>\n    );\n  }\n);\n","import styled from \"@emotion/styled\";\nimport React, { forwardRef, Ref } from \"react\";\n\nimport { Section } from \"./common\";\nimport { colors, contacts } from \"./constants\";\n\nconst ContactBody = styled.div``;\n\nconst ContactSection = styled(Section)`\n  width: 60%;\n  margin: auto;\n\n  font-family: Roboto;\n`;\n\nconst ContactHeader = styled.h1`\n  margin-top: 0px;\n  margin-bottom: 10px;\n\n  user-select: none;\n\n  font-size: 90px;\n  color: ${colors.highlight};\n`;\n\nconst ContactParagraph = styled.p`\n  user-select: none;\n\n  font-size: 16px;\n  color: ${colors.secondary};\n`;\n\nconst ContactRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n\n  margin: 5px;\n  padding: 15px;\n  border-radius: 5px;\n\n  user-select: none;\n  cursor: pointer;\n\n  transition: 0.75s ease;\n  :hover {\n    color: ${colors.primary};\n    background-color: rgba(0, 0, 0, 0.2);\n  }\n`;\n\ntype ContactProps = {\n  sectionId: string;\n};\n\nexport const Contact = forwardRef(\n  (props: ContactProps, ref: Ref<HTMLDivElement>) => {\n    return (\n      <ContactBody ref={ref}>\n        <ContactSection sectionId={props.sectionId} header={contacts.header}>\n          <ContactHeader>{contacts.subheader}</ContactHeader>\n          <ContactParagraph>{contacts.summary}</ContactParagraph>\n          {contacts.list.map((contact) => (\n            <ContactRow onClick={() => window.open(contact.link)}>\n              {contact.icon}\n              {contact.text}\n            </ContactRow>\n          ))}\n        </ContactSection>\n      </ContactBody>\n    );\n  }\n);\n","import styled from \"@emotion/styled\";\nimport React, { FC } from \"react\";\n\nconst paddingSides = \"25px\";\n\nconst StyledMenuBar = styled.div`\n  height: 12em;\n  width: calc(100vw - 2 * ${paddingSides});\n  position: fixed;\n  top: 0;\n  left: 0;\n  background: linear-gradient(to top, rgba(25, 25, 35, 0), rgba(25, 25, 35, 1));\n  font-family: Roboto, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n  z-index: 1;\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  padding: 0px ${paddingSides};\n  pointer-events: none;\n\n  button {\n    pointer-events: all;\n  }\n`;\n\ntype SiteMenuProps = {\n  children: JSX.Element[];\n};\n\nexport const SiteMenu: FC<SiteMenuProps> = (props) => {\n  return <StyledMenuBar>{props.children!.slice().reverse()}</StyledMenuBar>;\n};\n","import styled from \"@emotion/styled\";\nimport React, { createRef, FC, useEffect, useState } from \"react\";\nimport { FaAngleDoubleUp } from \"react-icons/fa\";\n\nimport { AboutMe } from \"./AboutMe\";\nimport { Introduction } from \"./Introduction\";\nimport { WorkExperience } from \"./experience\";\nimport { Skills } from \"./skills\";\nimport { Portfolio } from \"./portfolio\";\nimport { Contact } from \"./Contact\";\nimport { SiteMenu } from \"./SiteMenu\";\nimport { colors } from \"./constants\";\n\nconst AppBody = styled.div`\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  background-color: rgb(25, 25, 35);\n`;\n\nconst LinkButton = styled.button`\n  font-family: Roboto;\n  color: ${colors.primary};\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n  background-color: transparent;\n\n  border: none;\n  border-radius: 10px;\n\n  user-select: none;\n\n  margin: 0px 5px 10em 5px;\n  padding: 15px;\n\n  cursor: pointer;\n\n  :focus {\n    outline: 0;\n  }\n\n  transition: 1s ease;\n  :hover {\n    background-color: rgba(0, 0, 0, 0.2);\n    color: ${colors.highlight};\n  }\n`;\n\nconst UpArrowButton = styled(LinkButton)`\n  color: ${(props: { showUpArrow: boolean }) =>\n    props.showUpArrow ? colors.primary : \"transparent\"};\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n\n  z-index: 2;\n  padding: 5px;\n\n  cursor: ${(props: { showUpArrow: boolean }) =>\n    props.showUpArrow ? \"pointer\" : \"default\"};\n\n  transition: 1s ease;\n  :hover {\n    color: ${(props: { showUpArrow: boolean }) =>\n      props.showUpArrow ? colors.highlight : \"transparent\"};\n    border-color: ${(props: { showUpArrow: boolean }) =>\n      props.showUpArrow ? colors.highlight : \"transparent\"};\n  }\n`;\n\nconst App: FC = () => {\n  const [showUpArrow, setShowUpArrow] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener(\n      \"scroll\",\n      () => {\n        setShowUpArrow(window.pageYOffset > 25);\n      },\n      { passive: true }\n    );\n  }, [setShowUpArrow]);\n\n  const scrollTo = (ref: React.MutableRefObject<any>) =>\n    ref.current.scrollIntoView({ behavior: \"smooth\" });\n\n  const introRef = createRef<HTMLDivElement>();\n  const aboutRef = createRef<HTMLDivElement>();\n  const experienceRef = createRef<HTMLDivElement>();\n  const skillRef = createRef<HTMLDivElement>();\n  const portfolioRef = createRef<HTMLDivElement>();\n  const contactRef = createRef<HTMLDivElement>();\n\n  const links = [\n    <UpArrowButton\n      showUpArrow={showUpArrow}\n      id=\"top-link\"\n      onClick={() => scrollTo(introRef)}\n    >\n      <FaAngleDoubleUp style={{ padding: \"10px 12px\" }} />\n    </UpArrowButton>,\n    <LinkButton id=\"about-link\" onClick={() => scrollTo(aboutRef)}>\n      About Me\n    </LinkButton>,\n    <LinkButton id=\"experiences-link\" onClick={() => scrollTo(experienceRef)}>\n      Experiences\n    </LinkButton>,\n    <LinkButton id=\"skills-link\" onClick={() => scrollTo(skillRef)}>\n      Skills\n    </LinkButton>,\n    <LinkButton id=\"portfolio-link\" onClick={() => scrollTo(portfolioRef)}>\n      Portfolio\n    </LinkButton>,\n    <LinkButton id=\"contact-link\" onClick={() => scrollTo(contactRef)}>\n      Contact\n    </LinkButton>,\n  ];\n\n  return (\n    <AppBody>\n      <SiteMenu>{links}</SiteMenu>\n      <Introduction ref={introRef} />\n      <AboutMe ref={aboutRef} sectionId=\"01.\" />\n      <WorkExperience ref={experienceRef} sectionId=\"02.\" />\n      <Skills ref={skillRef} sectionId=\"03.\" />\n      <Portfolio ref={portfolioRef} sectionId=\"04.\" />\n      <Contact ref={contactRef} sectionId=\"05.\" />\n    </AppBody>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}